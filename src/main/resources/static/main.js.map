{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/authorization/auth.guard.ts","webpack:///./src/app/components/about/about.component.css","webpack:///./src/app/components/about/about.component.html","webpack:///./src/app/components/about/about.component.ts","webpack:///./src/app/components/activate/activate.component.css","webpack:///./src/app/components/activate/activate.component.html","webpack:///./src/app/components/activate/activate.component.ts","webpack:///./src/app/components/active-menu/active-menu.component.css","webpack:///./src/app/components/active-menu/active-menu.component.html","webpack:///./src/app/components/active-menu/active-menu.component.ts","webpack:///./src/app/components/contractor-list/contractor-list.component.css","webpack:///./src/app/components/contractor-list/contractor-list.component.html","webpack:///./src/app/components/contractor-list/contractor-list.component.ts","webpack:///./src/app/components/contractor/contractor.component.css","webpack:///./src/app/components/contractor/contractor.component.html","webpack:///./src/app/components/contractor/contractor.component.ts","webpack:///./src/app/components/dialog/account-dialog/account-dialog.component.html","webpack:///./src/app/components/dialog/account-dialog/account-dialog.component.ts","webpack:///./src/app/components/dialog/information-dialog/information-dialog.component.html","webpack:///./src/app/components/dialog/information-dialog/information-dialog.component.ts","webpack:///./src/app/components/dialog/yes-no-dialog/yes-no-dialog.component.html","webpack:///./src/app/components/dialog/yes-no-dialog/yes-no-dialog.component.ts","webpack:///./src/app/components/kpir-costs-list/kpir-costs-list.component.css","webpack:///./src/app/components/kpir-costs-list/kpir-costs-list.component.html","webpack:///./src/app/components/kpir-costs-list/kpir-costs-list.component.ts","webpack:///./src/app/components/kpir-costs/kpir-costs.component.css","webpack:///./src/app/components/kpir-costs/kpir-costs.component.html","webpack:///./src/app/components/kpir-costs/kpir-costs.component.ts","webpack:///./src/app/components/kpir-income/kpir-income.component.css","webpack:///./src/app/components/kpir-income/kpir-income.component.html","webpack:///./src/app/components/kpir-income/kpir-income.component.ts","webpack:///./src/app/components/kpir-print/kpir-print.component.css","webpack:///./src/app/components/kpir-print/kpir-print.component.html","webpack:///./src/app/components/kpir-print/kpir-print.component.ts","webpack:///./src/app/components/kpir/kpir-income-list.component.css","webpack:///./src/app/components/kpir/kpir-income-list.component.html","webpack:///./src/app/components/kpir/kpir-income-list.component.ts","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/registration/registration.component.css","webpack:///./src/app/components/registration/registration.component.html","webpack:///./src/app/components/registration/registration.component.ts","webpack:///./src/app/components/settings/settings.component.css","webpack:///./src/app/components/settings/settings.component.html","webpack:///./src/app/components/settings/settings.component.ts","webpack:///./src/app/components/snackbar/snack-bar.service.ts","webpack:///./src/app/datasource/bank-account-datasource.ts","webpack:///./src/app/datasource/contractor-list-datasource.ts","webpack:///./src/app/datasource/kpir-datasource.ts","webpack:///./src/app/interceptors/basic-auth.interceptor.ts","webpack:///./src/app/interceptors/error-interceptor.ts","webpack:///./src/app/models/global.ts","webpack:///./src/app/services/authentication.service.ts","webpack:///./src/app/services/contractor.service.ts","webpack:///./src/app/services/error-fields-matcher.service.ts","webpack:///./src/app/services/kpir.service.ts","webpack:///./src/app/services/printer.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///fs (ignored)","webpack:///http (ignored)","webpack:///https (ignored)"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RegistrationComponent } from './components/registration/registration.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { KpirIncomeListComponent } from './components/kpir/kpir-income-list.component';\nimport { AuthGuard } from './authorization/auth.guard';\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { ContractorListComponent } from './components/contractor-list/contractor-list.component';\nimport { ContractorComponent } from './components/contractor/contractor.component';\nimport { KpirIncomeComponent } from './components/kpir-income/kpir-income.component';\nimport { KpirCostsListComponent } from './components/kpir-costs-list/kpir-costs-list.component';\nimport { KpirCostsComponent } from './components/kpir-costs/kpir-costs.component';\nimport { ActivateComponent } from './components/activate/activate.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { KpirPrintComponent } from './components/kpir-print/kpir-print.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/kpir/income', pathMatch: 'full', canActivate: [AuthGuard]  },\n  { path: 'registration', component: RegistrationComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'about', component: AboutComponent },\n  { path: 'activate/:hash', component: ActivateComponent  },\n  { path: 'settings', component: SettingsComponent, canActivate: [AuthGuard]  },\n  { path: 'kpir/income', component: KpirIncomeListComponent, canActivate: [AuthGuard]  },\n  { path: 'kpir/income/add', component: KpirIncomeComponent, canActivate: [AuthGuard]  },\n  { path: 'kpir/printer', component: KpirPrintComponent, canActivate: [AuthGuard]  },\n  { path: 'kpir/costs', component: KpirCostsListComponent, canActivate: [AuthGuard]  },\n  { path: 'kpir/costs/add', component: KpirCostsComponent, canActivate: [AuthGuard]  },\n  { path: 'contractors', component: ContractorListComponent, canActivate: [AuthGuard]  },\n  { path: 'contractor/:id', component: ContractorComponent, canActivate: [AuthGuard]  },\n  { path: '**', redirectTo: '' }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".toolbar {\\n  justify-content: space-between;\\n}\\n\\nh1 {\\n  text-align: center;\\n}\\n\\nh3 {\\n  text-align: center;\\n}\\n\\nh1 > hr {\\n  width: 80%;\\n  margin: auto;\\n\\n}\\n\\nh3 > hr {\\n  width: 90%;\\n}\\n\\n.container {\\n  margin: 0% auto 5% auto;\\n  vertical-align: middle;\\n  width: 60%;\\n}\\n\\n.form-field{\\n  display: inline;\\n}\\n\\n.buttons-panel{\\n  width: 100%;\\n  margin-bottom: 10px;\\n  margin-top: 5%;\\n}\\n\\nbutton {\\n  width: 30%;\\n  margin: 0% 10% 0% 10%;\\n}\\n\\n.max-width{\\n  width: 100%\\n}\\n\\n.no-margin {\\n  margin: 0px;\\n}\\n\\n.no-padding {\\n  padding: 0px;\\n}\\n\\n.about-us-button {\\n  width: 100px;\\n}\\n\\n.submit-button {\\n  display: flex;\\n  width: 50%;\\n  align-items: center;\\n  justify-content: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9hcHAuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLCtCQUErQjtDQUNoQzs7QUFFRDtFQUNFLG1CQUFtQjtDQUNwQjs7QUFFRDtFQUNFLG1CQUFtQjtDQUNwQjs7QUFFRDtFQUNFLFdBQVc7RUFDWCxhQUFhOztDQUVkOztBQUVEO0VBQ0UsV0FBVztDQUNaOztBQUVEO0VBQ0Usd0JBQXdCO0VBQ3hCLHVCQUF1QjtFQUN2QixXQUFXO0NBQ1o7O0FBRUQ7RUFDRSxnQkFBZ0I7Q0FDakI7O0FBRUQ7RUFDRSxZQUFZO0VBQ1osb0JBQW9CO0VBQ3BCLGVBQWU7Q0FDaEI7O0FBRUQ7RUFDRSxXQUFXO0VBQ1gsc0JBQXNCO0NBQ3ZCOztBQUVEO0VBQ0UsV0FBVztDQUNaOztBQUVEO0VBQ0UsWUFBWTtDQUNiOztBQUVEO0VBQ0UsYUFBYTtDQUNkOztBQUVEO0VBQ0UsYUFBYTtDQUNkOztBQUVEO0VBQ0UsY0FBYztFQUNkLFdBQVc7RUFDWCxvQkFBb0I7RUFDcEIsd0JBQXdCO0NBQ3pCIiwiZmlsZSI6ImFwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi50b29sYmFyIHtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xufVxuXG5oMSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuaDMge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbmgxID4gaHIge1xuICB3aWR0aDogODAlO1xuICBtYXJnaW46IGF1dG87XG5cbn1cblxuaDMgPiBociB7XG4gIHdpZHRoOiA5MCU7XG59XG5cbi5jb250YWluZXIge1xuICBtYXJnaW46IDAlIGF1dG8gNSUgYXV0bztcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgd2lkdGg6IDYwJTtcbn1cblxuLmZvcm0tZmllbGR7XG4gIGRpc3BsYXk6IGlubGluZTtcbn1cblxuLmJ1dHRvbnMtcGFuZWx7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICBtYXJnaW4tdG9wOiA1JTtcbn1cblxuYnV0dG9uIHtcbiAgd2lkdGg6IDMwJTtcbiAgbWFyZ2luOiAwJSAxMCUgMCUgMTAlO1xufVxuXG4ubWF4LXdpZHRoe1xuICB3aWR0aDogMTAwJVxufVxuXG4ubm8tbWFyZ2luIHtcbiAgbWFyZ2luOiAwcHg7XG59XG5cbi5uby1wYWRkaW5nIHtcbiAgcGFkZGluZzogMHB4O1xufVxuXG4uYWJvdXQtdXMtYnV0dG9uIHtcbiAgd2lkdGg6IDEwMHB4O1xufVxuXG4uc3VibWl0LWJ1dHRvbiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHdpZHRoOiA1MCU7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufSJdfQ== */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<mat-toolbar class=\\\"toolbar\\\" color=\\\"primary\\\">\\n  <span (click)=\\\"goHome()\\\">Comp-cal</span>\\n  <app-active-menu></app-active-menu>\\n</mat-toolbar>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from './services/authentication.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n    title = 'comp-cal';\n    constructor(private router: Router, private auth: AuthenticationService) {\n  }\n\n  goHome() {\n    if (this.auth.isLogged()) {\n      this.router.navigateByUrl('/home');\n    } else {\n      this.router.navigateByUrl('/login');\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule, MatCheckboxModule, MatTableModule, MatPaginatorModule, MatSortModule, MatNativeDateModule, \n  MatDatepickerModule, MatSelectModule, MatIconModule, MatMenuModule, MatDialogModule, MatSnackBarModule,\n  MatToolbarModule, MatInputModule, MatCardModule, MatRadioModule,MatTooltipModule,\n} from '@angular/material';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatMomentDateModule } from '@angular/material-moment-adapter';\nimport { ScrollDispatchModule } from '@angular/cdk/scrolling';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { SimplePdfViewerModule } from 'simple-pdf-viewer';\n\nimport { LoginComponent } from './components/login/login.component';\nimport { RegistrationComponent } from './components/registration/registration.component';\nimport { KpirIncomeListComponent } from './components/kpir/kpir-income-list.component';\nimport { ActiveMenuComponent } from './components/active-menu/active-menu.component';\nimport { BasicAuthInterceptor } from './interceptors/basic-auth.interceptor';\nimport { ErrorInterceptor } from './interceptors/error-interceptor';\nimport { InformationDialogComponent } from './components/dialog/information-dialog/information-dialog.component';\nimport { YesNoDialog } from './components/dialog/yes-no-dialog/yes-no-dialog.component';\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { AccountDialogComponent } from './components/dialog/account-dialog/account-dialog.component';\nimport { ContractorListComponent } from './components/contractor-list/contractor-list.component';\nimport { ContractorComponent } from './components/contractor/contractor.component';\nimport { KpirIncomeComponent } from './components/kpir-income/kpir-income.component';\nimport { KpirCostsListComponent } from './components/kpir-costs-list/kpir-costs-list.component';\nimport { KpirCostsComponent } from './components/kpir-costs/kpir-costs.component';\nimport { ActivateComponent } from './components/activate/activate.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { KpirPrintComponent } from './components/kpir-print/kpir-print.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegistrationComponent,\n    LoginComponent,\n    KpirIncomeListComponent,\n    ActiveMenuComponent,\n    InformationDialogComponent,\n    YesNoDialog,\n    SettingsComponent,\n    AccountDialogComponent,\n    ContractorListComponent,\n    ContractorComponent,\n    KpirIncomeComponent,\n    KpirCostsListComponent,\n    KpirCostsComponent,\n    ActivateComponent,\n    AboutComponent,\n    KpirPrintComponent\n  ],\n  imports: [\n    BrowserModule,\n    ScrollDispatchModule,\n    MatSelectModule,\n    SimplePdfViewerModule,\n    MatCardModule,\n    MatRadioModule,\n    AppRoutingModule,\n    MatDialogModule,\n    MatMenuModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatInputModule,\n    MatDatepickerModule,\n    HttpClientModule,\n    FormsModule,\n    MatIconModule,\n    MatNativeDateModule,\n    MatMomentDateModule,\n    ReactiveFormsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatSnackBarModule, \n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: BasicAuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [InformationDialogComponent, YesNoDialog,AccountDialogComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router) { }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if (sessionStorage.getItem(\"currentUser\")) {\n      return true;\n    }\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n    return false;\n  }\n}\n","module.exports = \"\\n.title {\\n    text-align: center;\\n    width: 70%;\\n    padding: 20px;\\n    margin-left: auto;\\n    margin-right: auto;\\n}\\n\\n.content {\\n    width: 60%;\\n    margin-left: auto;\\n    margin-right: auto;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9jb21wb25lbnRzL2Fib3V0L2Fib3V0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksbUJBQW1CO0lBQ25CLFdBQVc7SUFDWCxjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLG1CQUFtQjtDQUN0Qjs7QUFFRDtJQUNJLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsbUJBQW1CO0dBQ3BCIiwiZmlsZSI6ImFwcC9jb21wb25lbnRzL2Fib3V0L2Fib3V0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbi50aXRsZSB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHdpZHRoOiA3MCU7XG4gICAgcGFkZGluZzogMjBweDtcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG59XG5cbi5jb250ZW50IHtcbiAgICB3aWR0aDogNjAlO1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgfVxuICAiXX0= */\"","module.exports = \"<h1 class=\\\"title\\\" sticky>O nas\\n  <hr>\\n</h1>\\n<mat-card class=\\\"content\\\">\\n  <p>Witam w serwisie comp-cal.</p>\\n  <p>Serwis pomaga w zarządzaniu finansami w firmie w przypadku korzystania z księgi przychodów i rozchodów. Został on\\n    napisany jako praca inżynierska na studiach informatycznych na wydziale informatyki i zarządzania na Politechnice\\n    Wrocawskiej.</p>\\n  <p>W przypadku jakichkolwiek uwag dotyczących serwisu proszę o kontakt na maila: 187104@student.pwr.edu.pl</p>\\n  <p>Autor: Artur Markowski<br>\\n    Email: 187104@student.pwr.edu.pl\\n  </p>\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n","module.exports = \".container {\\n    width: 70%;\\n    padding: 20px;\\n    margin-left: auto;\\n    margin-right: auto;\\n}\\n\\n.title {\\n    text-align: center;\\n}\\n\\n.authorizedText {\\n    height: 100px;\\n    text-align: middle;\\n}\\n\\n.button {\\n    margin-left: auto;\\n    margin-right: auto;\\n    width: 50%;\\n}\\n\\n.content {\\n    width: 50%;\\n    margin-left: auto;\\n    margin-right: auto;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9jb21wb25lbnRzL2FjdGl2YXRlL2FjdGl2YXRlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0lBQ1gsY0FBYztJQUNkLGtCQUFrQjtJQUNsQixtQkFBbUI7Q0FDdEI7O0FBRUQ7SUFDSSxtQkFBbUI7Q0FDdEI7O0FBRUQ7SUFDSSxjQUFjO0lBQ2QsbUJBQW1CO0NBQ3RCOztBQUVEO0lBQ0ksa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixXQUFXO0NBQ2Q7O0FBRUQ7SUFDSSxXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLG1CQUFtQjtHQUNwQiIsImZpbGUiOiJhcHAvY29tcG9uZW50cy9hY3RpdmF0ZS9hY3RpdmF0ZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gICAgd2lkdGg6IDcwJTtcbiAgICBwYWRkaW5nOiAyMHB4O1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcbn1cblxuLnRpdGxlIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5hdXRob3JpemVkVGV4dCB7XG4gICAgaGVpZ2h0OiAxMDBweDtcbiAgICB0ZXh0LWFsaWduOiBtaWRkbGU7XG59XG5cbi5idXR0b24ge1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgICB3aWR0aDogNTAlO1xufVxuXG4uY29udGVudCB7XG4gICAgd2lkdGg6IDUwJTtcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIH1cbiAgIl19 */\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1 class=\\\"title\\\" sticky>Aktywacja konta\\n    <hr>\\n  </h1>\\n</div>\\n\\n<mat-card class=\\\"content\\\">\\n  <mat-card-content>\\n    <div class=\\\"authorizedText\\\">\\n      <p *ngIf=\\\"autorized==null\\\">Prosimy chwilę poczekać.</p>\\n      <p *ngIf=\\\"autorized\\\">Dziękujemy za rejestrację w naszym serwisie, teraz możesz się już zalogować do systemu.</p>\\n      <p *ngIf=\\\"autorized!=null && !autorized\\\">Niestety, nie można było dokończyć rejestracji. Proszę sprawdzić czy\\n        wprowadzony link jest porpawny. </p>\\n    </div>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <div class=\\\"button\\\">\\n      <button mat-raised-button [routerLink]=\\\"['/login']\\\" color=\\\"primary\\\" type=\\\"button\\\">Przejdź do strony logowania</button>\\n    </div>\\n  </mat-card-actions>\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { isNullOrUndefined } from 'util';\nimport { SnackBarService } from '../snackbar/snack-bar.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { ActivateModel } from 'src/app/models/models';\n\n@Component({\n  selector: 'app-activate',\n  templateUrl: './activate.component.html',\n  styleUrls: ['./activate.component.css']\n})\nexport class ActivateComponent implements OnInit {\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private snackbar: SnackBarService,\n    private service: UserService\n  ) { }\n  autorized: Boolean = null;\n  \n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      let hash: string = params['hash'];\n      if (isNullOrUndefined(hash)) {\n        this.snackbar.show(\"Nie poprawny adres url\");\n        this.router.navigateByUrl(\"/login\");\n      } else {\n        let activateModel: ActivateModel = { code: hash };\n        this.service.authorize(activateModel).subscribe(result => {\n          this.autorized = result;\n        })\n      }\n    });\n    \n  }\n\n}\n","module.exports = \".menu-button {\\n    margin-left:10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9jb21wb25lbnRzL2FjdGl2ZS1tZW51L2FjdGl2ZS1tZW51LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7Q0FDcEIiLCJmaWxlIjoiYXBwL2NvbXBvbmVudHMvYWN0aXZlLW1lbnUvYWN0aXZlLW1lbnUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tZW51LWJ1dHRvbiB7XG4gICAgbWFyZ2luLWxlZnQ6MTBweDtcbn0iXX0= */\"","module.exports = \"<div class=\\\"menu\\\">\\n  <button *ngIf=\\\"isLogged()\\\" mat-raised-button class=\\\"menu-button\\\" [routerLink]=\\\"['/kpir/income']\\\" type=\\\"button\\\">Przychody</button>\\n  <button *ngIf=\\\"isLogged()\\\" mat-raised-button class=\\\"menu-button\\\" [routerLink]=\\\"['/kpir/costs']\\\" type=\\\"button\\\">Rozchody</button>\\n  <button *ngIf=\\\"isLogged()\\\" mat-raised-button class=\\\"menu-button\\\" [routerLink]=\\\"['/kpir/printer']\\\" type=\\\"button\\\">Wydruk</button>\\n  <button *ngIf=\\\"isLogged()\\\" mat-raised-button class=\\\"menu-button\\\" [routerLink]=\\\"['/contractors']\\\" type=\\\"button\\\">Kontrachenci</button>\\n  <button mat-raised-button class=\\\"menu-button\\\" [routerLink]=\\\"['/about']\\\" type=\\\"button\\\">O serwisie</button>\\n  <button *ngIf=\\\"isLogged()\\\" mat-raised-button class=\\\"menu-button\\\" [routerLink]=\\\"['/settings']\\\" type=\\\"button\\\">Ustawienia</button>\\n  <button *ngIf=\\\"isLogged()\\\" mat-raised-button class=\\\"menu-button\\\" (click)=\\\"openLogout()\\\">Wyloguj</button>\\n  <button *ngIf=\\\"!isLogged()\\\" mat-raised-button class=\\\"menu-button\\\" [routerLink]=\\\"['/login']\\\" type=\\\"button\\\">Zaloguj</button>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { YesNoDialog } from '../dialog/yes-no-dialog/yes-no-dialog.component';\nimport { YesNoDialogData } from 'src/app/models/models';\n\n@Component({\n  selector: 'app-active-menu',\n  templateUrl: './active-menu.component.html',\n  styleUrls: ['./active-menu.component.css']\n})\nexport class ActiveMenuComponent implements OnInit {\n\n  constructor(private router: Router, public dialog: MatDialog, private auth: AuthenticationService) { }\n\n  ngOnInit() { }\n\n  openLogout() {\n    let dialogData: YesNoDialogData = { \n      title: \"Wylogowanie\", \n      context: \"czy na pewno chcesz się wylogować?\",\n      yesButton: \"wyloguj\", noButton: \"Anuluj\"\n    };\n    let dialogRef = this.dialog.open(YesNoDialog, { data: dialogData });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result){\n        this.auth.logout();\n      }\n    })\n  }\n\n  isLogged() {\n    return this.auth.isLogged();\n  }\n}\n","module.exports = \"\\ntable th {\\n  text-align: center;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\n.table {\\n  width: 100%;\\n}\\n\\n.filter {\\n  width: 80%;\\n  padding: 20px;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\n.mat-card-header > mat-card-header-text {\\n  width: 100%;\\n  text-align: center;\\n}\\n\\n.filter-forms, .mat-checkbox-layout {\\n  width: 100%;\\n}\\n\\nmat-form-field, mat-checkbox {\\n  margin-right: 20px;\\n  width: 250px;\\n}\\n\\n.new-contractor-button {\\n  float: right;\\n  width: 150px;\\n  margin: 10px;\\n}\\n\\n.content {\\n  width: 90%;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9jb21wb25lbnRzL2NvbnRyYWN0b3ItbGlzdC9jb250cmFjdG9yLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7RUFDRSxtQkFBbUI7RUFDbkIsa0JBQWtCO0VBQ2xCLG1CQUFtQjtDQUNwQjs7QUFFRDtFQUNFLFlBQVk7Q0FDYjs7QUFFRDtFQUNFLFdBQVc7RUFDWCxjQUFjO0VBQ2Qsa0JBQWtCO0VBQ2xCLG1CQUFtQjtDQUNwQjs7QUFFRDtFQUNFLFlBQVk7RUFDWixtQkFBbUI7Q0FDcEI7O0FBRUQ7RUFDRSxZQUFZO0NBQ2I7O0FBRUQ7RUFDRSxtQkFBbUI7RUFDbkIsYUFBYTtDQUNkOztBQUVEO0VBQ0UsYUFBYTtFQUNiLGFBQWE7RUFDYixhQUFhO0NBQ2Q7O0FBRUQ7RUFDRSxXQUFXO0VBQ1gsa0JBQWtCO0VBQ2xCLG1CQUFtQjtDQUNwQiIsImZpbGUiOiJhcHAvY29tcG9uZW50cy9jb250cmFjdG9yLWxpc3QvY29udHJhY3Rvci1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbnRhYmxlIHRoIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xufVxuXG4udGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmZpbHRlciB7XG4gIHdpZHRoOiA4MCU7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG59XG5cbi5tYXQtY2FyZC1oZWFkZXIgPiBtYXQtY2FyZC1oZWFkZXItdGV4dCB7XG4gIHdpZHRoOiAxMDAlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5maWx0ZXItZm9ybXMsIC5tYXQtY2hlY2tib3gtbGF5b3V0IHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbm1hdC1mb3JtLWZpZWxkLCBtYXQtY2hlY2tib3gge1xuICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG4gIHdpZHRoOiAyNTBweDtcbn1cblxuLm5ldy1jb250cmFjdG9yLWJ1dHRvbiB7XG4gIGZsb2F0OiByaWdodDtcbiAgd2lkdGg6IDE1MHB4O1xuICBtYXJnaW46IDEwcHg7XG59XG5cbi5jb250ZW50IHtcbiAgd2lkdGg6IDkwJTtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbn0iXX0= */\"","module.exports = \"  <h1 class=\\\"title\\\" sticky>Kontrachenci\\n    <hr>\\n  </h1>\\n\\n<form [formGroup]=\\\"contractorFilter\\\" class=\\\"filter\\\" novalidate (ngSubmit)=\\\"save(contractorFilter.value)\\\">\\n  <mat-card class=\\\"filter-forms\\\">\\n    <mat-card-header>\\n      <mat-card-title>Filtrowanie</mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Nazwa kontrahenta\\\" formControlName=\\\"company\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Nip kontrahenta\\\" formControlName=\\\"nip\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Osoba kontaktowa\\\" formControlName=\\\"person\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Branza\\\" formControlName=\\\"trade\\\">\\n      </mat-form-field>\\n    </mat-card-content>\\n    <mat-card-actions>\\n      <div mat-dialog-actions class=\\\"submit-button\\\">\\n        <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Filtruj</button>\\n      </div>\\n    </mat-card-actions>\\n  </mat-card>\\n</form>\\n\\n<mat-card class=\\\"content\\\">\\n  <button mat-raised-button color=\\\"primary\\\" class=\\\"button new-contractor-button\\\" [routerLink]=\\\"[ '/contractor', nan]\\\">Nowy\\n    kontrahent</button>\\n\\n  <table mat-table class=\\\"table\\\" [dataSource]=\\\"dataSource\\\" matSort aria-label=\\\"Elements\\\">\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Lp.</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{element.id}}</td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"company\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Nazwa</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{element.company}}<br>{{element.address}}</td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"personName\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Osoba kontakowa</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{element.personName}}<br>\\n        Email: {{element.email}}<br>\\n        Telefon: {{element.phone}}</td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"trade\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Branza</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{element.trade}}</td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"nip\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Nip</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{element.nip}}</td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <th mat-header-cell *matHeaderCellDef>Akcje</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\n        <mat-icon mat-flat-button color=\\\"primary\\\" matTooltip=\\\"Edytuj kontrahenta\\\" [routerLink]=\\\"[ '/contractor',element.id]\\\">edit</mat-icon>\\n        <mat-icon mat-flat-button color=\\\"warn\\\" matTooltip=\\\"Usuń kontrahenta\\\" (click)=\\\"delete(element)\\\">delete</mat-icon>\\n      </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"columns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let element; columns: columns;\\\"></tr>\\n  </table>\\n\\n  <mat-paginator #paginator [pageIndex]=\\\"0\\\" [pageSize]=\\\"5\\\" [pageSizeOptions]=\\\"[5, 10, 20]\\\">\\n  </mat-paginator>\\n</mat-card>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort, MatDialog, MatSnackBar } from '@angular/material';\nimport { ContractorListDataSource } from '../../datasource/contractor-list-datasource';\nimport { Router } from '@angular/router';\nimport { YesNoDialogData, ContractorMini, ContractorFilter } from 'src/app/models/models';\nimport { ContractorService } from 'src/app/services/contractor.service';\nimport { YesNoDialog } from '../dialog/yes-no-dialog/yes-no-dialog.component';\nimport { isNullOrUndefined } from 'util';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-contractor-list',\n  templateUrl: './contractor-list.component.html',\n  styleUrls: ['./contractor-list.component.css', '../../app.component.css'],\n})\nexport class ContractorListComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  dataSource: ContractorListDataSource;\n  contractors: ContractorMini[];\n  columns = ['id', 'company', 'personName', 'trade', 'nip', 'actions'];\n  filter: ContractorFilter;\n  nan: number = NaN;\n  contractorFilter = this.fb.group({\n    company: [null, [Validators.maxLength(15)]],\n    nip: [null, [Validators.maxLength(15)]],\n    person: [null, [Validators.maxLength(15)]],\n    trade: [null, [Validators.maxLength(15)]],\n  })\n  constructor(\n    private route: Router,\n    private service: ContractorService,\n    private dialog: MatDialog,\n    private fb: FormBuilder,\n    public snackBar: MatSnackBar,\n  ) {\n    this.filter = {company:null, nip: null, person: null, trade: null}\n  }\n\n  ngOnInit() {\n    this.refresh();\n  }\n\n  save(model: ContractorFilter) {\n    this.filter = model;\n    this.refresh();\n  }\n\n  delete(element: ContractorMini) {\n    let dialogData: YesNoDialogData = {\n      title: \"Usuwnaie kontraktora\",\n      context: \"Czy usunąć kontraktóra \" + element.company + \" o numerze nip: \" + element.nip + \"?\",\n      yesButton: \"Usuń\", noButton: \"Anuluj\"\n    };\n    let dialogRef = this.dialog.open(YesNoDialog, { data: dialogData });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.service.delete(element.id).subscribe(\n          result => {\n            if (result) {\n              this.showSnackBar(\"Udało się usunąć kontractora\");\n              this.refresh();\n            } else this.showSnackBar(\"Przykro nam, ale nie udało się kontraktora\");\n          }\n        )\n      }\n    })\n  }\n\n  refresh() {\n    this.service.getAll(this.filter).subscribe(result => {\n      this.contractors = result;\n      if (isNullOrUndefined(this.contractors)) {\n        this.contractors = [];\n      }\n      this.dataSource = new ContractorListDataSource(this.paginator, this.sort, this.contractors);\n    })\n  }\n\n  showSnackBar(text: string) { this.snackBar.open(text, '', { duration: 3000 }); }\n\n}\n\n\n","module.exports = \".parcel-field {\\n  width: 45%;\\n  padding-right: 4%\\n}\\n\\n.home-field {\\n  width: 45%;\\n  float: right;\\n}\\n\\n.zip-field {\\n  width: 30%;\\n}\\n\\n.city-field {\\n  width: 65%;\\n  float: right;\\n}\\n\\n.my-mat-card-title {\\n  width: 100%;\\n  text-align: center;\\n}\\n\\n.submit-button {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.account-div {\\n  width: 100%;\\n}\\n\\n.account-div > span {\\n  height: 30px;\\n  vertical-align: middle;\\n  width: 70%;\\n}\\n\\n.account-div > div {\\n  width: 20%;\\n  float: right;\\n}\\n\\n.account-div > mat-icon {\\n  padding-right: 10px\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9jb21wb25lbnRzL2NvbnRyYWN0b3IvY29udHJhY3Rvci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztFQUNYLGlCQUFpQjtDQUNsQjs7QUFFRDtFQUNFLFdBQVc7RUFDWCxhQUFhO0NBQ2Q7O0FBRUQ7RUFDRSxXQUFXO0NBQ1o7O0FBRUQ7RUFDRSxXQUFXO0VBQ1gsYUFBYTtDQUNkOztBQUVEO0VBQ0UsWUFBWTtFQUNaLG1CQUFtQjtDQUNwQjs7QUFFRDtFQUNFLGNBQWM7RUFDZCxvQkFBb0I7RUFDcEIsd0JBQXdCO0NBQ3pCOztBQUVEO0VBQ0UsWUFBWTtDQUNiOztBQUVEO0VBQ0UsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixXQUFXO0NBQ1o7O0FBRUQ7RUFDRSxXQUFXO0VBQ1gsYUFBYTtDQUNkOztBQUVEO0VBQ0UsbUJBQW1CO0NBQ3BCIiwiZmlsZSI6ImFwcC9jb21wb25lbnRzL2NvbnRyYWN0b3IvY29udHJhY3Rvci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBhcmNlbC1maWVsZCB7XG4gIHdpZHRoOiA0NSU7XG4gIHBhZGRpbmctcmlnaHQ6IDQlXG59XG5cbi5ob21lLWZpZWxkIHtcbiAgd2lkdGg6IDQ1JTtcbiAgZmxvYXQ6IHJpZ2h0O1xufVxuXG4uemlwLWZpZWxkIHtcbiAgd2lkdGg6IDMwJTtcbn1cblxuLmNpdHktZmllbGQge1xuICB3aWR0aDogNjUlO1xuICBmbG9hdDogcmlnaHQ7XG59XG5cbi5teS1tYXQtY2FyZC10aXRsZSB7XG4gIHdpZHRoOiAxMDAlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5zdWJtaXQtYnV0dG9uIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi5hY2NvdW50LWRpdiB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uYWNjb3VudC1kaXYgPiBzcGFuIHtcbiAgaGVpZ2h0OiAzMHB4O1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICB3aWR0aDogNzAlO1xufVxuXG4uYWNjb3VudC1kaXYgPiBkaXYge1xuICB3aWR0aDogMjAlO1xuICBmbG9hdDogcmlnaHQ7XG59XG5cbi5hY2NvdW50LWRpdiA+IG1hdC1pY29uIHtcbiAgcGFkZGluZy1yaWdodDogMTBweFxufSJdfQ== */\"","module.exports = \"<h1 class=\\\"title\\\">{{ title }}\\n  <hr>\\n</h1>\\n\\n<form [formGroup]=\\\"contractor\\\" novalidate (ngSubmit)=\\\"save(contractor.value, contractor.valid)\\\">\\n  <mat-card class=\\\"container\\\">\\n    <mat-card-header>\\n      <mat-card-title>Dane kontrahenta</mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Nazwa firmy\\\" formControlName=\\\"company\\\" [errorStateMatcher]=\\\"matcher\\\">\\n        <mat-error *ngIf=\\\"contractor.controls['company'].hasError('required')\\\">\\n          Proszę wpisać nazwę firmy.\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Numer nip\\\" formControlName=\\\"nip\\\" [errorStateMatcher]=\\\"matcher\\\">\\n        <mat-error *ngIf=\\\"contractor.controls['nip'].hasError('required')\\\">\\n          Proszę wpisać numer nip.\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Ulica\\\" formControlName=\\\"street\\\" [errorStateMatcher]=\\\"matcher\\\">\\n        <mat-error *ngIf=\\\"contractor.controls['street'].hasError('required')\\\">\\n          Proszę wpisać ulicę.\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <div class=\\\"max-width\\\">\\n        <mat-form-field class=\\\"parcel-field\\\">\\n          <input matInput placeholder=\\\"Numer domu\\\" formControlName=\\\"parcelNo\\\" [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-error *ngIf=\\\"contractor.controls['parcelNo'].hasError('required')\\\">\\n            Proszę wpisać numer domu.\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <label>/</label>\\n\\n        <mat-form-field class=\\\"home-field\\\">\\n          <input matInput placeholder=\\\"Numer mieszkania\\\" formControlName=\\\"homeNo\\\" [errorStateMatcher]=\\\"matcher\\\">\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"max-width\\\">\\n        <mat-form-field class=\\\"zip-field\\\">\\n          <input matInput placeholder=\\\"Kod pocztowy\\\" formControlName=\\\"zip\\\" [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-error *ngIf=\\\"contractor.controls['zip'].hasError('required') || contractor.controls['zip'].hasError('minLength') || contractor.controls['zip'].hasError('maxLength')\\\">\\n            Proszę wpisać kod pocztowy w formie XX-XXX\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <label>,</label>\\n\\n        <mat-form-field class=\\\"city-field\\\">\\n          <input matInput placeholder=\\\"Miasto\\\" formControlName=\\\"city\\\" [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-error *ngIf=\\\"contractor.controls['city'].hasError('required')\\\">\\n            Proszę wpisać miasto.\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"form-field\\\">\\n          <input matInput placeholder=\\\"Kraj\\\" formControlName=\\\"country\\\" [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-error *ngIf=\\\"contractor.controls['country'].hasError('required')\\\">\\n            Proszę wpisać państwo.\\n          </mat-error>\\n        </mat-form-field>\\n\\n      </div>\\n\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Branza firmy\\\" formControlName=\\\"trade\\\">\\n      </mat-form-field>\\n\\n      <mat-card-header>\\n        <mat-card-title>Dane kontaktowe</mat-card-title>\\n      </mat-card-header>\\n\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Imię przedstawiciela\\\" formControlName=\\\"firstname\\\">\\n        <mat-error *ngIf=\\\"contractor.controls['firstname'].hasError('required')\\\">\\n          Proszę wpisać poprawne imię przedstawiciela.\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Nazwisko przedstawiciela`\\\" formControlName=\\\"surname\\\">\\n        <mat-error *ngIf=\\\"contractor.controls['surname'].hasError('required')\\\">\\n          Proszę wpisać poprawne nazwisko przedstawiciela.\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" [errorStateMatcher]=\\\"matcher\\\">\\n        <mat-error *ngIf=\\\"contractor.controls['email'].hasError('email') ||\\n        contractor.controls['email'].hasError('pattern') || \\n        contractor.controls['email'].hasError('required')\\\">\\n          Proszę wpisać poprawny adres email.\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Numer telefonu\\\" formControlName=\\\"phone\\\">\\n      </mat-form-field>\\n\\n      <mat-card-header>\\n        <mat-card-title>Konto bankowe firmy</mat-card-title>\\n      </mat-card-header>\\n\\n      <div *ngIf=\\\"account\\\" class=\\\"account-div\\\">\\n        <span>Konto w walucie: <b>{{ account.currency }}</b> o numerze <b>{{ account.accountNo }}</b> i kodzie swift <b>{{\\n            account.swift }}</b></span>\\n        <div>\\n          <mat-icon mat-flat-button color=\\\"primary\\\" type=\\\"button\\\" matTooltip=\\\"Edytuj konto bankowe\\\" (click)=\\\"edit()\\\">edit</mat-icon>\\n          <mat-icon mat-flat-button color=\\\"warn\\\" type=\\\"button\\\" matTooltip=\\\"Usuń konto bankowe\\\" (click)=\\\"delete()\\\">delete</mat-icon>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"!account\\\" class=\\\"account-div\\\">\\n        <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" class=\\\"button max-width no-margin\\\" (click)=\\\"newAccount()\\\">Dodaj nowe\\n          konto</button>\\n      </div>\\n\\n    </mat-card-content>\\n    <mat-card-actions>\\n      <div mat-dialog-actions class=\\\"submit-button\\\">\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!contractor.valid\\\" type=\\\"submit\\\">Zapisz</button>\\n        <button mat-raised-button color=\\\"warn\\\" [routerLink]=\\\"[ '/contractors']\\\" type=\\\"button\\\">Anuluj</button>\\n      </div>\\n    </mat-card-actions>\\n  </mat-card>\\n</form>\\n\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { BankAccount, Contractor, YesNoDialogData } from 'src/app/models/models';\nimport { ErrorFieldsMatcherService } from 'src/app/services/error-fields-matcher.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ContractorService } from 'src/app/services/contractor.service';\nimport { isNullOrUndefined } from 'util';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { AccountDialogComponent } from '../dialog/account-dialog/account-dialog.component';\nimport { YesNoDialog } from '../dialog/yes-no-dialog/yes-no-dialog.component';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-contractor',\n  templateUrl: './contractor.component.html',\n  styleUrls: ['./contractor.component.css', '../../app.component.css'],\n})\nexport class ContractorComponent implements OnInit {\n  title: string;\n\n  contractor = this.fb.group({\n    email: [null, [\n      Validators.required,\n      Validators.email,\n      Validators.pattern(\"[a-zA-Z0-9.-]+\\@[a-zA-Z0-9.-]+\\.[a-z]+\")\n    ]],\n    firstname: [null, [\n      Validators.required,\n      Validators.maxLength(15)\n    ]],\n    surname: [null, [\n      Validators.required,\n      Validators.maxLength(15)\n    ]],\n    company: [null, [\n      Validators.required,\n    ]],\n    nip: [null, [\n      Validators.required,\n      Validators.minLength(10),\n      Validators.maxLength(10),\n    ]],\n    street: [null, [\n      Validators.required,\n      Validators.maxLength(20)\n    ]],\n    parcelNo: [null, [\n      Validators.required,\n      Validators.maxLength(5)\n    ]],\n    homeNo: [null, [\n      Validators.maxLength(5)\n    ]],\n    zip: [null, [\n      Validators.required,\n      Validators.maxLength(6),\n      Validators.minLength(6),\n      Validators.pattern(\"[0-9]{2}-[0-9]{3}\")\n    ]],\n    city: [null, [\n      Validators.required,\n      Validators.maxLength(15)\n    ]],\n    country: [null, [Validators.required,]],\n    trade: [null, [Validators.maxLength(15)]],\n    phone: [null, [Validators.maxLength(15)]],\n  });\n  account: BankAccount;\n  id: number;\n\n  constructor(\n    private fb: FormBuilder,\n    public matcher: ErrorFieldsMatcherService,\n    private route: ActivatedRoute,\n    private router: Router, \n    private service: ContractorService,\n    private dialog: MatDialog,\n    private snackBar: MatSnackBar,\n    private userService: UserService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    let sub = this.route.params.subscribe(params => {\n      this.id = params['id'];\n    });\n    if (isNaN(this.id)){\n      this.title = \"Nowy kontrahent\";\n    } else {\n      this.service.getOne(this.id).subscribe(result => {\n        if (result.bankAccounts.length > 0){\n          this.account = result.bankAccounts[0];\n        } \n        this.contractor.patchValue(result);\n        this.title = \"Edycja kontraktora: \" + result.company + \" \" + result.nip;\n      })\n    }\n  }\n\n  save(model: Contractor, isValid: boolean) {\n    if (isValid) {\n      model.bankAccounts = [];\n      model.bankAccounts.push(this.account);\n      if(isNaN(this.id)) {\n        this.service.create(model).subscribe(result => {\n          if(result){\n            this.showSnackBar(\"Utworzono nowego kontraktora\")\n          } else {\n            this.showSnackBar(\"Błąd, nie utworzono kontraktora\")\n          }\n        })\n      } else {\n        model.id = this.id;\n        this.service.update(model).subscribe(result => {\n          if(result){\n            this.showSnackBar(\"Uaktualniono kontraktora\")\n          } else {\n            this.showSnackBar(\"Błąd, nie utworzono kontraktora\")\n          }\n        })\n      }\n      this.router.navigateByUrl(\"/contractors\");\n    }\n  }\n\n  newAccount() {\n    let newAccount = <BankAccount>{\n      accountNo: '', currency: '', swift: '',\n    }\n    let dialogRef = this.dialog.open(AccountDialogComponent, { width: \"400px\", data: newAccount });\n    dialogRef.afterClosed().subscribe(result => {\n      this.account = result;\n    });\n  }\n\n  edit() {\n    let dialogRef = this.dialog.open(AccountDialogComponent, { width: \"400px\", data: this.account });\n    dialogRef.afterClosed().subscribe(result => {\n      this.account = result;\n      this.showSnackBar(\"Aby zapisa wprowadzonew konto proszę wscisnąć przycisk zapisz.\");\n    });\n  }\n\n  delete() {\n    let dialogData: YesNoDialogData = {\n      title: \"Usuwanie konta\",\n      context: \"Czy usunąć konto: \" + this.account.currency + \" \" + this.account.accountNo,\n      yesButton: \"Usuń\", noButton: \"Anuluj\"\n    };\n    let dialogRef = this.dialog.open(YesNoDialog, { data: dialogData });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        if (!isNullOrUndefined(this.account.id)) {\n          this.userService.deleteAccount(this.account.id).subscribe(\n            result => {\n              if (result) { this.showSnackBar(\"Udało się usunąć konto\"); }\n              else this.showSnackBar(\"Przykro nam, ale nie udało się usunąć konto\");\n            }\n          )\n        }\n      }\n      this.account = undefined;\n    })\n  }\n\n  showSnackBar(text: string) { this.snackBar.open(text, '', { duration: 3000 }); }\n\n}\n","module.exports = \"<h1 mat-dialog-title>{{ title }}</h1>\\n<div mat-dialog-content>\\n  <form>\\n    <mat-form-field class=\\\"form-field\\\">\\n      <input matInput placeholder=\\\"Numer konta\\\" [formControl]=\\\"accountNoFC\\\" [errorStateMatcher]=\\\"matcher\\\">\\n      <mat-error *ngIf=\\\"accountNoFC.hasError('required')\\\">\\n        Proszę wpisać numer konta.\\n      </mat-error>\\n    </mat-form-field>\\n    \\n    <mat-form-field class=\\\"form-field\\\">\\n      <mat-select placeholder=\\\"Wybierz walutę konta\\\" [formControl]=\\\"currencyFC\\\" [errorStateMatcher]=\\\"matcher\\\">\\n        <mat-option value=\\\"PLN\\\">PLN</mat-option>\\n        <mat-option value=\\\"EUR\\\">Euro</mat-option>\\n        <mat-option value=\\\"USD\\\">Dolar amerykański</mat-option>\\n        <mat-option value=\\\"GBP\\\">Funt szterling</mat-option>\\n      </mat-select>\\n      <mat-error *ngIf=\\\"currencyFC.hasError('required')\\\">Musisz wybrać walutę konta</mat-error>\\n    </mat-form-field>\\n    \\n    <mat-form-field class=\\\"form-field\\\">\\n      <input matInput placeholder=\\\"Numer swift\\\" [formControl]=\\\"swiftFC\\\" [errorStateMatcher]=\\\"matcher\\\">\\n      <mat-error *ngIf=\\\"swiftFC.hasError('required')\\\">\\n        Proszę wpisać numer swift.\\n      </mat-error>\\n    </mat-form-field>\\n  </form>\\n</div>\\n<div mat-dialog-actions class=\\\"submit-button\\\">\\n  <button mat-raised-button [mat-dialog-close]=\\\"checkAndGetValues()\\\" [disabled]=\\\"!isValid()\\\">{{ yesButton }}</button>\\n  <button mat-raised-button (click)=\\\"noClick()\\\">Anuluj</button>\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { BankAccount } from 'src/app/models/models';\nimport { FormControl, Validators } from '@angular/forms';\nimport { isUndefined } from 'util';\nimport { ErrorFieldsMatcherService } from 'src/app/services/error-fields-matcher.service';\n\n@Component({\n  selector: 'app-account-dialog',\n  templateUrl: './account-dialog.component.html',\n  styleUrls: ['../../../app.component.css']\n})\nexport class AccountDialogComponent {\n  title: string;\n  yesButton: string;\n  currencyFC: FormControl;\n  swiftFC: FormControl;\n  accountNoFC: FormControl;\n  constructor(public dialogRef: MatDialogRef<AccountDialogComponent>,\n    public matcher: ErrorFieldsMatcherService,\n    @Inject(MAT_DIALOG_DATA) public data: BankAccount,\n  ) {\n\n    this.accountNoFC = new FormControl('', [\n      Validators.required,\n      Validators.maxLength(26),\n      Validators.minLength(26),\n    ]);\n    this.currencyFC = new FormControl('', [\n      Validators.required\n    ]);\n    this.swiftFC = new FormControl('', [\n      Validators.required\n    ]);\n    if (data.accountNo === '') {\n      this.title = \"Nowe konto bankowe\";\n      this.yesButton = \"Dodaj\";\n    }\n    else {\n      this.title = \"Edycja konta: \" + data.accountNo;\n      this.yesButton = \"Zapisz\";\n      this.accountNoFC.setValue(data.accountNo);\n      this.currencyFC.setValue(data.currency);\n      this.swiftFC.setValue(data.swift);\n    }\n\n  }\n\n  isValid() {\n    return this.swiftFC.valid && this.accountNoFC.valid && this.currencyFC.valid;\n  }\n\n  checkAndGetValues() {\n    this.data.swift = this.swiftFC.value;\n    this.data.accountNo = this.accountNoFC.value;\n    this.data.currency = this.currencyFC.value;\n    return this.data;\n  }\n\n  noClick() {\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \"<h1 mat-dialog-title>{{ data.title }}</h1>\\n<div mat-dialog-content (click)=\\\"close()\\\">\\n  <p style=\\\"width: 400px;\\\">{{ data.context }}</p>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"close()\\\">Zamknij</button>\\n</div>\"","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { DialogData } from 'src/app/models/models';\n\n@Component({\n  selector: 'app-information-dialog',\n  templateUrl: './information-dialog.component.html',\n})\nexport class InformationDialogComponent {\n\n  constructor(public dialogRef: MatDialogRef<InformationDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n  close() {\n    this.dialogRef.close();\n  }\n}\n","module.exports = \"<h1 mat-dialog-title>{{ data.title }}</h1>\\n<div mat-dialog-content>\\n    <p style=\\\"width: 400px;\\\">{{ data.context }}</p>\\n  </div>\\n<div mat-dialog-actions class=\\\"submit-button\\\">\\n  <button mat-button [mat-dialog-close]=\\\"true\\\" cdkFocusInitial>{{ data.yesButton }}</button>\\n  <button mat-button (click)=\\\"noClick()\\\">{{ data.noButton }}</button>\\n</div>\"","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { YesNoDialogData } from 'src/app/models/models';\n\n@Component({\n  selector: 'app-yes-no-dialog',\n  templateUrl: './yes-no-dialog.component.html',\n})\nexport class YesNoDialog {\n  constructor(public dialogRef: MatDialogRef<YesNoDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: YesNoDialogData) { }\n\n  noClick() {\n    this.dialogRef.close();\n  }\n}\n","module.exports = \"\\ntable th {\\n    text-align: center;\\n    margin-left: auto;\\n    margin-right: auto;\\n  }\\n  \\n  .text-center {\\n    text-align: center;\\n  }\\n  \\n  .table {\\n    width: 100%;\\n  }\\n  \\n  .filter {\\n    width: 80%;\\n    padding: 20px;\\n    margin-left: auto;\\n    margin-right: auto;\\n  }\\n  \\n  .mat-card-header > mat-card-header-text {\\n    width: 100%;\\n    text-align: center;\\n  }\\n  \\n  .filter-forms, .mat-checkbox-layout {\\n    width: 100%;\\n  }\\n  \\n  mat-form-field, mat-checkbox {\\n    margin-right: 20px;\\n    width: 250px;\\n  }\\n  \\n  .new-contractor-button {\\n    float: right;\\n    width: 250px;\\n    margin: 10px;\\n  }\\n  \\n  .content {\\n    width: 90%;\\n    margin-left: auto;\\n    margin-right: auto;\\n  }\\n  \\n  .text-headers {\\n    width: 200px;\\n    margin-bottom: 15px;\\n    max-width: 300px;\\n    padding: 0px 5px 5px 0px;\\n  }\\n  \\n  .text-headers-mid {\\n    width: 150px;\\n    margin-bottom: 15px;\\n    max-width: 200px;\\n    padding: 0px 5px 5px 0px;\\n  }\\n  \\n  .mat-footer-cell {\\n    margin: 10px 0 0 10px\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9jb21wb25lbnRzL2twaXItY29zdHMtbGlzdC9rcGlyLWNvc3RzLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7SUFDSSxtQkFBbUI7SUFDbkIsa0JBQWtCO0lBQ2xCLG1CQUFtQjtHQUNwQjs7RUFFRDtJQUNFLG1CQUFtQjtHQUNwQjs7RUFFRDtJQUNFLFlBQVk7R0FDYjs7RUFFRDtJQUNFLFdBQVc7SUFDWCxjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLG1CQUFtQjtHQUNwQjs7RUFFRDtJQUNFLFlBQVk7SUFDWixtQkFBbUI7R0FDcEI7O0VBRUQ7SUFDRSxZQUFZO0dBQ2I7O0VBRUQ7SUFDRSxtQkFBbUI7SUFDbkIsYUFBYTtHQUNkOztFQUVEO0lBQ0UsYUFBYTtJQUNiLGFBQWE7SUFDYixhQUFhO0dBQ2Q7O0VBRUQ7SUFDRSxXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLG1CQUFtQjtHQUNwQjs7RUFFRDtJQUNFLGFBQWE7SUFDYixvQkFBb0I7SUFDcEIsaUJBQWlCO0lBQ2pCLHlCQUF5QjtHQUMxQjs7RUFFRDtJQUNFLGFBQWE7SUFDYixvQkFBb0I7SUFDcEIsaUJBQWlCO0lBQ2pCLHlCQUF5QjtHQUMxQjs7RUFDRDtJQUNFLHFCQUFxQjtHQUN0QiIsImZpbGUiOiJhcHAvY29tcG9uZW50cy9rcGlyLWNvc3RzLWxpc3Qva3Bpci1jb3N0cy1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbnRhYmxlIHRoIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICB9XG4gIFxuICAudGV4dC1jZW50ZXIge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxuICBcbiAgLnRhYmxlIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICBcbiAgLmZpbHRlciB7XG4gICAgd2lkdGg6IDgwJTtcbiAgICBwYWRkaW5nOiAyMHB4O1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgfVxuICBcbiAgLm1hdC1jYXJkLWhlYWRlciA+IG1hdC1jYXJkLWhlYWRlci10ZXh0IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbiAgXG4gIC5maWx0ZXItZm9ybXMsIC5tYXQtY2hlY2tib3gtbGF5b3V0IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICBcbiAgbWF0LWZvcm0tZmllbGQsIG1hdC1jaGVja2JveCB7XG4gICAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xuICAgIHdpZHRoOiAyNTBweDtcbiAgfVxuICBcbiAgLm5ldy1jb250cmFjdG9yLWJ1dHRvbiB7XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICAgIHdpZHRoOiAyNTBweDtcbiAgICBtYXJnaW46IDEwcHg7XG4gIH1cbiAgXG4gIC5jb250ZW50IHtcbiAgICB3aWR0aDogOTAlO1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgfVxuICBcbiAgLnRleHQtaGVhZGVycyB7XG4gICAgd2lkdGg6IDIwMHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XG4gICAgbWF4LXdpZHRoOiAzMDBweDtcbiAgICBwYWRkaW5nOiAwcHggNXB4IDVweCAwcHg7XG4gIH1cblxuICAudGV4dC1oZWFkZXJzLW1pZCB7XG4gICAgd2lkdGg6IDE1MHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XG4gICAgbWF4LXdpZHRoOiAyMDBweDtcbiAgICBwYWRkaW5nOiAwcHggNXB4IDVweCAwcHg7XG4gIH1cbiAgLm1hdC1mb290ZXItY2VsbCB7XG4gICAgbWFyZ2luOiAxMHB4IDAgMCAxMHB4XG4gIH0iXX0= */\"","module.exports = \"<h1 class=\\\"title\\\" sticky>Księga przychodów i rozchodów - rozchody\\n    <hr>\\n</h1>\\n\\n\\n<form [formGroup]=\\\"kpirFilter\\\" class=\\\"filter\\\" novalidate (ngSubmit)=\\\"doFilter(kpirFilter.value)\\\">\\n    <mat-card class=\\\"filter-forms\\\">\\n        <mat-card-header>\\n            <mat-card-title>Filtrowanie</mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content>\\n            <mat-form-field>\\n                <mat-select placeholder=\\\"Wybierz rok rozliczeniowy\\\" formControlName=\\\"selectedYear\\\" (selectionChange)=\\\"changeYear()\\\">\\n                    <mat-option></mat-option>\\n                    <mat-option *ngFor=\\\"let year of years\\\" [value]=\\\"year\\\">{{year}}</mat-option>\\n                </mat-select>\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n                <mat-select placeholder=\\\"Wybierz miesiąc rozliczeniowy\\\" formControlName=\\\"selectedMonth\\\">\\n                    <mat-option *ngIf=\\\"checkSelectedYear()\\\" [value]=\\\"null\\\">wybierz najpierw rok</mat-option>\\n                    <mat-option *ngIf=\\\"!checkSelectedYear()\\\" [value]=\\\"null\\\">-- anuluj --</mat-option>\\n                    <mat-option *ngFor=\\\"let month of months\\\" [value]=\\\"month.no\\\">{{month.name}}</mat-option>\\n                    <mat-option *ngIf=\\\"!checkSelectedYear()\\\" [value]=\\\"null\\\">-- anuluj --</mat-option>\\n                </mat-select>\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n                <input matInput [min]=\\\"economicEventMinDate\\\" [max]=\\\"economicEventMaxDate\\\" [matDatepicker]=\\\"economicEvent\\\"\\n                    placeholder=\\\"Data zdarzenia gospodarczego\\\" formControlName=\\\"economicEventDate\\\" (click)=\\\"economicEvent.open()\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"economicEvent\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #economicEvent></mat-datepicker>\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n                <input matInput placeholder=\\\"Nazwa kontrahenta\\\" formControlName=\\\"company\\\">\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n                <input matInput placeholder=\\\"Nip kontrahenta\\\" type=\\\"number\\\" formControlName=\\\"nip\\\">\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n                <input matInput placeholder=\\\"Numer dowodu księgowego\\\" formControlName=\\\"registrationNumber\\\">\\n            </mat-form-field>\\n\\n            <mat-checkbox formControlName=\\\"isPayed\\\">Pokaź opłacone</mat-checkbox>\\n            <mat-checkbox formControlName=\\\"notPayed\\\">Pokaź nieopłacone</mat-checkbox>\\n            <mat-checkbox formControlName=\\\"overdue\\\">Pokaź po terminie płatności</mat-checkbox>\\n        </mat-card-content>\\n        <mat-card-actions>\\n            <div mat-dialog-actions class=\\\"submit-button\\\">\\n                <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Filtruj</button>\\n            </div>\\n        </mat-card-actions>\\n    </mat-card>\\n</form>\\n\\n\\n<mat-card class=\\\"content\\\">\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"button new-contractor-button\\\" [routerLink]=\\\"['/kpir/costs/add']\\\">Dodaj\\n        ewidencję kosztów</button>\\n    <table mat-table class=\\\"table\\\" [dataSource]=\\\"dataSource\\\" matSort>\\n        <!-- 1 -->\\n        <ng-container matColumnDef=\\\"idx\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header rowspan=\\\"2\\\" sticky>Lp.</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.idx}}</td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n        <!-- 2 -->\\n        <ng-container matColumnDef=\\\"economicEventDate\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header rowspan=\\\"2\\\" sticky>Data<br>zdarzenia<br>gospodarczego</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.economicEventDate | date: 'dd-MM-yyyy'}}</td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n        <!-- 3 -->\\n        <ng-container matColumnDef=\\\"registrationNumber\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header rowspan=\\\"2\\\" sticky>Numer<br>dowodu<br>księgowego</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.registrationNumber}}</td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n        <!-- t1 -->\\n        <ng-container matColumnDef=\\\"consumer\\\">\\n            <th mat-header-cell *matHeaderCellDef colspan=\\\"1\\\" sticky>kontrahent</th>\\n        </ng-container>\\n        <!-- 4 -->\\n        <ng-container matColumnDef=\\\"fullName\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"text-headers\\\" sticky>imię i nazwisko (firma)<br>adres</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.fullName}}<br>{{element.address}}</td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n        <!-- 6 -->\\n        <ng-container matColumnDef=\\\"description\\\">\\n            <th mat-header-cell *matHeaderCellDef class=\\\"text-headers\\\" rowspan=\\\"2\\\" sticky>Opis<br>zdarzenia<br>gospodarczego</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.description}}</td>\\n            <td mat-footer-cell *matFooterCellDef> Suma bierzącej strony<br>\\n                <hr>Razem od początku {{ getName() }}</td>\\n        </ng-container>\\n        <!-- 10 -->\\n        <ng-container matColumnDef=\\\"purchaseCosts\\\">\\n            <th mat-header-cell *matHeaderCellDef rowspan=\\\"2\\\">Zakup<br>towarów<br>handlowych<br>i materiałów<br>handlowych<br>wg.\\n                cen<br>zukupu</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-center\\\">{{element.purchaseCosts}}</td>\\n            <td mat-footer-cell *matFooterCellDef class=\\\"text-center\\\">{{getPagedPurchaseCosts()}}<br>\\n                <hr>{{getPurchaseCosts()}}</td>\\n        </ng-container>\\n        <!-- 11 -->\\n        <ng-container matColumnDef=\\\"purchaseSideCosts\\\">\\n            <th mat-header-cell *matHeaderCellDef rowspan=\\\"2\\\">Koszty<br>uboczne<br>zakupu</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-center\\\">{{element.purchaseSideCosts}}</td>\\n            <td mat-footer-cell *matFooterCellDef class=\\\"text-center\\\">{{getPagedPurchaseSideCosts()}}<br>\\n                <hr>{{getPurchaseSideCosts()}}</td>\\n        </ng-container>\\n        <!-- t3 -->\\n        <ng-container matColumnDef=\\\"costs\\\">\\n            <th mat-header-cell *matHeaderCellDef colspan=\\\"4\\\">Wydatki (Koszty)</th>\\n        </ng-container>\\n        <!-- 12 -->\\n        <ng-container matColumnDef=\\\"paymentCost\\\">\\n            <th mat-header-cell *matHeaderCellDef>wynagrodzenie<br>w gotówce<br>i w naturze</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-center\\\">{{element.paymentCost}}</td>\\n            <td mat-footer-cell *matFooterCellDef class=\\\"text-center\\\">{{getPagedPaymnetCost()}}<br>\\n                <hr>{{getPaymnetCost()}}</td>\\n        </ng-container>\\n        <!-- 13 -->\\n        <ng-container matColumnDef=\\\"otherCosts\\\">\\n            <th mat-header-cell *matHeaderCellDef>pozostałe<br>wydatki</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-center\\\">{{element.otherCosts}}</td>\\n            <td mat-footer-cell *matFooterCellDef class=\\\"text-center\\\">{{getPagedOtherCosts()}}<br>\\n                <hr>{{getOtherCosts()}}</td>\\n        </ng-container>\\n        <!-- 14 -->\\n        <ng-container matColumnDef=\\\"sumCosts\\\">\\n            <th mat-header-cell *matHeaderCellDef>wydatki<br>razem</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-center\\\">{{element.sumCosts}}</td>\\n            <td mat-footer-cell *matFooterCellDef class=\\\"text-center\\\">{{getPagedSumCosts()}}<br>\\n                <hr>{{getSumCosts()}}</td>\\n        </ng-container>\\n        <!-- 15 -->\\n        <ng-container matColumnDef=\\\"other\\\">\\n            <th mat-header-cell *matHeaderCellDef>różne</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-center\\\">{{element.other}}</td>\\n            <td mat-footer-cell *matFooterCellDef class=\\\"text-center\\\">{{getPagedOtherCosts()}}<br>\\n                <hr>{{getOtherCosts()}}</td>\\n        </ng-container>\\n        <!-- t3 -->\\n        <ng-container matColumnDef=\\\"costsRad\\\">\\n            <th mat-header-cell *matHeaderCellDef colspan=\\\"2\\\">Koszty działalności<br>badawczo-rozwojowej<br>o których\\n                mowa w\\n                art. 26c<br>ustawy o podatku dochodowym</th>\\n        </ng-container>\\n        <!-- 16 -->\\n        <ng-container matColumnDef=\\\"radDescription\\\">\\n            <th mat-header-cell *matHeaderCellDef>opis kosztu</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-headers-mid\\\">{{element.radDescription}}</td>\\n            <td mat-footer-cell *matFooterCellDef><br>\\n                <hr><br></td>\\n        </ng-container>\\n        <ng-container matColumnDef=\\\"radCost\\\">\\n            <th mat-header-cell *matHeaderCellDef>wartość</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-center\\\">{{element.radCosts}}</td>\\n            <td mat-footer-cell *matFooterCellDef class=\\\"text-center\\\">{{getPagedRadCosts()}}<br>\\n                <hr>{{getRadCosts()}}</td>\\n        </ng-container>\\n        <!-- 17 -->\\n        <ng-container matColumnDef=\\\"comments\\\">\\n            <th mat-header-cell *matHeaderCellDef class=\\\"text-headers\\\" rowspan=\\\"2\\\">Uwagi</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.comments}}</td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n        <!-- akcje -->\\n        <ng-container matColumnDef=\\\"actions\\\">\\n            <th mat-header-cell *matHeaderCellDef rowspan=\\\"2\\\">Akcje</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-center\\\">\\n                <mat-icon mat-flat-button color=\\\"primary\\\" matTooltip=\\\"Edytuj rozchód\\\" (click)=\\\"edit(element)\\\">edit</mat-icon>\\n                <mat-icon mat-flat-button color=\\\"warn\\\" matTooltip=\\\"Usuń rozchód\\\" (click)=\\\"delete(element)\\\">delete</mat-icon>\\n            </td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"headerFirstLine sticky: true\\\"></tr>\\n        <tr mat-header-row *matHeaderRowDef=\\\"headerSecondLine sticky: true\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let element; columns: columns;\\\"></tr>\\n        <tr mat-footer-row *matFooterRowDef=\\\"columns; sticky: true\\\"></tr>\\n    </table>\\n\\n    <mat-paginator #paginator [pageSizeOptions]=\\\"[10, 25, 100]\\\"></mat-paginator>\\n</mat-card>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort, MatDatepicker, DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS, MatDialog } from '@angular/material';\nimport { KpirListDataSource } from '../../datasource/kpir-datasource';\nimport { FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { MomentDateAdapter, MAT_MOMENT_DATE_FORMATS } from '@angular/material-moment-adapter';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Kpir, KpirFilter, YesNoDialogData } from 'src/app/models/models';\nimport { KpirService } from 'src/app/services/kpir.service';\nimport { isNullOrUndefined, isUndefined } from 'util';\nimport { UserService } from 'src/app/services/user.service';\nimport { first } from 'rxjs/operators';\nimport { Global } from 'src/app/models/global';\nimport { SnackBarService } from '../snackbar/snack-bar.service';\nimport { YesNoDialog } from '../dialog/yes-no-dialog/yes-no-dialog.component';\nimport { formatDate } from '@angular/common';\n\n@Component({\n  selector: 'app-kpir-costs-list',\n  templateUrl: './kpir-costs-list.component.html',\n  styleUrls: ['./kpir-costs-list.component.css', '../../app.component.css'],\n  providers: [\n    { provide: MAT_DATE_LOCALE, useValue: 'pl-PL' },\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n    {provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS},\n  ],\n})\nexport class KpirCostsListComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  columns = [\"idx\", \"economicEventDate\", \"registrationNumber\", \"fullName\", \"description\", \"purchaseCosts\", \"purchaseSideCosts\", \"paymentCost\", \"otherCosts\", \"sumCosts\", \"other\", \"radDescription\", \"radCost\", \"comments\", \"actions\"];\n  headerFirstLine = [\"idx\", \"economicEventDate\", \"registrationNumber\", \"consumer\", \"description\", \"purchaseCosts\", \"purchaseSideCosts\", \"costs\", \"costsRad\", \"comments\", \"actions\"];\n  headerSecondLine = [\"fullName\", \"paymentCost\", \"otherCosts\", \"sumCosts\", \"other\", \"radDescription\", \"radCost\"];\n  dataSource: KpirListDataSource;\n  filter: KpirFilter;\n  kpirs: Kpir[];\n\n  temp: Date;\n  globalMinDate: Date;\n  economicEventMinDate: Date;\n  economicEventMaxDate: Date;\n  years: number[] = [];\n  months: any[] = [];\n\n  kpirFilter = this.fb.group({\n    company: [null, [Validators.maxLength(15)]],\n    nip: [null, [Validators.maxLength(15)]],\n    registrationNumber: [null, [Validators.maxLength(15)]],\n    economicEventDate: [null, [Validators.maxLength(15)]],\n    isPayed: [null],\n    notPayed: [null],\n    overdue: [null],\n    selectedYear: null,\n    selectedMonth: [null]\n  })\n\n  constructor(\n    private router: Router,\n    private fb: FormBuilder,\n    private service: KpirService,\n    private userService: UserService,\n    private snackbar: SnackBarService,\n    private dialog: MatDialog,\n  ) {\n  }\n\n  ngOnInit() {\n    this.temp = new Date()\n    this.filter = {\n      company: null, nip: null, economicEventDate: null, isPayed: null,\n      notPayed: null, overdue: null, registrationNumber: null, type: 'COSTS',\n      selectedYear: this.temp.getFullYear(), selectedMonth: Global.allMonths[this.temp.getMonth()].no\n    }\n    this.kpirFilter.patchValue(this.filter);\n    this.userService.getRegistrationDate().pipe(first()).subscribe(result => {\n      this.globalMinDate = new Date(result);\n      this.economicEventMinDate = new Date(this.globalMinDate.getFullYear(), this.globalMinDate.getMonth(), 1);\n      this.economicEventMaxDate = new Date(this.temp.getFullYear(), (this.temp.getMonth()) + 1), 0;\n      for (let i = this.temp.getFullYear(); i >= this.globalMinDate.getFullYear(); i--) {\n        this.years.push(i);\n      }\n      this.changeYear();\n    })\n    this.refresh(); \n  }\n\n  refresh() {\n    this.service.getAll(this.filter).subscribe(result => {\n      this.kpirs = result;\n      if (isNullOrUndefined(this.kpirs)) {\n        this.kpirs = [];\n      }\n      this.dataSource = new KpirListDataSource(this.paginator, this.sort, this.kpirs);\n    })\n  }\n\n  checkSelectedYear(){\n    return isUndefined(this.kpirFilter.value.selectedYear)\n  }\n  \n  doFilter(model: KpirFilter) {\n    this.filter = model;\n    this.filter.type = 'COSTS';\n    this.refresh();\n  }\n\n  edit(element: Kpir) {\n    this.service.kpirId = element.id;\n    this.router.navigateByUrl(\"/kpir/costs/add\");\n  }\n\n  delete(element: Kpir) {\n    let dialogData: YesNoDialogData = {\n      title: \"Usuwnaie rozchód\",\n      context: \"Czy usunąć rozchód nr \" + element.idx + \" z dnia: \" + formatDate(element.economicEventDate, \"dd-MM-yyyy\", \"en-US\") + \"?\",\n      yesButton: \"Usuń\", noButton: \"Anuluj\"\n    };\n    let dialogRef = this.dialog.open(YesNoDialog, { data: dialogData });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.service.delete(element.id).subscribe(\n          result => {\n            if (result) {\n              this.snackbar.show(\"Udało się usunąć rozchód\");\n              this.refresh();\n            } else this.snackbar.show(\"Przykro nam, ale nie udało się rozchód\");\n          })\n      }\n    })\n  }\n\n  getPurchaseCosts() {\t\t\n    if (isUndefined(this.dataSource)){ return 0; }\t\t\n    return this.dataSource.getData().map(t => t.purchaseCosts).reduce((acc, value) => acc + value, 0);\t\t\n  }\t\t\n  getPurchaseSideCosts() {\t\t\n    if (isUndefined(this.dataSource)){ return 0; }\t\t\n    return this.dataSource.getData().map(t => t.purchaseSideCosts).reduce((acc, value) => acc + value, 0);\t\t\n  }\t\t\n  getPaymnetCost() {\t\t\n    if (isUndefined(this.dataSource)){ return 0; }\t\t\n    return this.dataSource.getData().map(t => t.paymentCost).reduce((acc, value) => acc + value, 0);\t\t\n  }\t\t\n  getOtherCosts() {\t\t\n    if (isUndefined(this.dataSource)){ return 0; }\t\t\n    return this.dataSource.getData().map(t => t.otherCosts).reduce((acc, value) => acc + value, 0);\t\t\n  }\t\t\n  getSumCosts() {\t\t\n    if (isUndefined(this.dataSource)){ return 0; }\t\t\n    return this.dataSource.getData().map(t => t.sumCosts).reduce((acc, value) => acc + value, 0);\t\t\n  }\t\t\n  getPagedPurchaseCosts() {\t\t\n    if (isUndefined(this.dataSource)){ return 0; }\t\t\n    return this.dataSource.getPageData().map(t => t.purchaseCosts).reduce((acc, value) => acc + value, 0);\t\t\n  }\t\t\n  getPagedPurchaseSideCosts() {\t\t\n    if (isUndefined(this.dataSource)){ return 0; }\t\t\n    return this.dataSource.getPageData().map(t => t.purchaseSideCosts).reduce((acc, value) => acc + value, 0);\t\t\n  }\t\t\n  getPagedPaymnetCost() {\t\t\n    if (isUndefined(this.dataSource)){ return 0; }\t\t\n    return this.dataSource.getPageData().map(t => t.paymentCost).reduce((acc, value) => acc + value, 0);\t\t\n  }\t\t\n  getPagedOtherCosts() {\t\t\n    if (isUndefined(this.dataSource)){ return 0; }\t\t\n    return this.dataSource.getPageData().map(t => t.otherCosts).reduce((acc, value) => acc + value, 0);\t\t\n  }\t\t\n  getPagedSumCosts() {\t\t\n    if (isUndefined(this.dataSource)){ return 0; }\t\t\n    return this.dataSource.getPageData().map(t => t.sumCosts).reduce((acc, value) => acc + value, 0);\t\t\n  }\n  getRadCosts() {\t\t\n    if (isUndefined(this.dataSource)){ return 0; }\t\t\n    return this.dataSource.getData().map(t => t.radCosts).reduce((acc, value) => acc + value, 0);\t\t\n  }\t\t\n  getPagedRadCosts() {\t\t\n    if (isUndefined(this.dataSource)){ return 0; }\t\t\n    return this.dataSource.getPageData().map(t => t.radCosts).reduce((acc, value) => acc + value, 0);\t\t\n  }\t\t\n  getName(){\n    return isNullOrUndefined(this.kpirFilter.value.selectedMonth) ? 'roku' : 'miesiąca';\n  }\n\n  changeYear() {\n    this.months = [];\n    this.kpirFilter.value.selectedMonth = undefined;\n    if (isNullOrUndefined(this.temp)) {\n      this.temp = new Date();\n    }\n    if (this.temp.getFullYear() == this.globalMinDate.getFullYear()) {\n      for (let i = this.globalMinDate.getMonth(); i <= this.temp.getMonth(); i++) {\n        this.months.push(Global.allMonths[i]);\n      }\n    }\n    else if (this.kpirFilter.value.selectedYear == (this.globalMinDate.getFullYear())) {\n      for (let i = this.globalMinDate.getMonth(); i < Global.allMonths.length; i++) {\n        this.months.push(Global.allMonths[i]);\n      }\n    } else if (this.kpirFilter.value.selectedYear == (this.temp.getFullYear())) {\n      for (let i = 0; i <= this.temp.getMonth(); i++) {\n        this.months.push(Global.allMonths[i]);\n      }\n    } else if (this.kpirFilter.value.selectedYear != undefined) {\n      this.months = Global.allMonths;\n    }\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvY29tcG9uZW50cy9rcGlyLWNvc3RzL2twaXItY29zdHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1 class=\\\"title\\\">Ewidencja kosztów\\n  <hr>\\n</h1>\\n\\n<form [formGroup]=\\\"kpir\\\" novalidate (ngSubmit)=\\\"save(kpir.value, kpir.valid)\\\">\\n  <mat-card class=\\\"container\\\">\\n    <mat-card-header>\\n      <mat-card-title>Ewidencja z dnia {{kpir.value.economicEventDate | date: 'dd-MM-yyyy'}} o numerze\\n        {{kpir.value.idx}}</mat-card-title>\\n    </mat-card-header>\\n\\n    <mat-card-content>\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput [matDatepicker]=\\\"economicEvent\\\"\\n          placeholder=\\\"Data zdarzenia gospodarczego\\\" formControlName=\\\"economicEventDate\\\" (click)=\\\"economicEvent.open()\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"economicEvent\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #economicEvent></mat-datepicker>\\n        <mat-error *ngIf=\\\"kpir.controls['economicEventDate'].hasError('required')\\\">\\n          Proszę opis zdarzenia gospodarczego.\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-select class=\\\"form-field\\\" placeholder=\\\"Wybierz kontrahenta\\\" formControlName=\\\"contractor\\\" [errorStateMatcher]=\\\"matcher\\\">\\n        <mat-option *ngFor=\\\"let contr of contractors\\\" [value]=\\\"contr.id\\\">\\n          {{contr.company}}\\n        </mat-option>\\n        <mat-error *ngIf=\\\"kpir.controls['contractor'].hasError('required')\\\">\\n          Proszę wybrać kontrahenta.\\n        </mat-error>\\n      </mat-select>\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Nr dowodu księgowego\\\" formControlName=\\\"registrationNumber\\\" [errorStateMatcher]=\\\"matcher\\\">\\n        <mat-error *ngIf=\\\"kpir.controls['registrationNumber'].hasError('required')\\\">\\n          Proszę nr dowodu księgowego.\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Opis zdarzenia gospodarczego\\\" formControlName=\\\"description\\\" [errorStateMatcher]=\\\"matcher\\\">\\n        <mat-error *ngIf=\\\"kpir.controls['description'].hasError('required')\\\">\\n          Proszę opis zdarzenia gospodarczego.\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Zakup towarów handlowych i materiałów handlowych wg. cen zukupu\\\" type=\\\"number\\\" formControlName=\\\"purchaseCosts\\\"\\n          [errorStateMatcher]=\\\"matcher\\\">\\n      </mat-form-field>\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Koszty uboczne zakupu\\\" type=\\\"number\\\" formControlName=\\\"purchaseSideCosts\\\"\\n          [errorStateMatcher]=\\\"matcher\\\">\\n      </mat-form-field>\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Wydatki - wynagrodzenie w gotówce i w naturze\\\" type=\\\"number\\\" formControlName=\\\"paymentCost\\\"\\n          [errorStateMatcher]=\\\"matcher\\\">\\n      </mat-form-field>\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Wydatki - pozostałe wydatki\\\" type=\\\"number\\\" formControlName=\\\"otherCosts\\\"\\n          [errorStateMatcher]=\\\"matcher\\\">\\n      </mat-form-field>\\n      \\n      <div >\\n        <p>Wydatki - Wydatki razem: {{calculateSumCosts()}}</p>\\n      </div>\\n\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Wydatki - rózne\\\" type=\\\"number\\\" formControlName=\\\"other\\\"\\n          [errorStateMatcher]=\\\"matcher\\\">\\n      </mat-form-field>\\n\\n      <div >\\n        <p>Koszty działalności badawczo-rozwojowej o których mowa w art. 26c ustawy o podatku dochodowym</p>\\n      </div>\\n\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Koszty działalności badawczo-rozwojowej - opis kosztu\\\" formControlName=\\\"radDescription\\\"\\n          [errorStateMatcher]=\\\"matcher\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Koszty działalności badawczo-rozwojowej - wartość\\\" type=\\\"number\\\" formControlName=\\\"radCosts\\\"\\n          [errorStateMatcher]=\\\"matcher\\\">\\n      </mat-form-field>\\n\\n      <mat-checkbox formControlName=\\\"payed\\\">Czy opacono?</mat-checkbox>\\n\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput [max]=\\\"kpir.value.paymentDateMax\\\" [matDatepicker]=\\\"paymentDateMinEvent\\\" placeholder=\\\"Terminowa data patności\\\"\\n          formControlName=\\\"paymentDateMin\\\" (click)=\\\"paymentDateMinEvent.open()\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"paymentDateMinEvent\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #paymentDateMinEvent></mat-datepicker>\\n        <mat-error *ngIf=\\\"kpir.controls['paymentDateMin'].hasError('required')\\\">\\n          Proszę opis zdarzenia gospodarczego.\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput [min]=\\\"kpir.value.paymentDateMin\\\" [matDatepicker]=\\\"paymentDateMaxEvent\\\" placeholder=\\\"Ostateczna data płatności\\\"\\n          formControlName=\\\"paymentDateMax\\\" (click)=\\\"paymentDateMaxEvent.open()\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"paymentDateMaxEvent\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #paymentDateMaxEvent></mat-datepicker>\\n        <mat-error *ngIf=\\\"kpir.controls['paymentDateMax'].hasError('required')\\\">\\n          Proszę opis zdarzenia gospodarczego.\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"form-field\\\">\\n          <input matInput placeholder=\\\"Uwagi\\\" formControlName=\\\"comments\\\" [errorStateMatcher]=\\\"matcher\\\">\\n      </mat-form-field>\\n    </mat-card-content>\\n    <mat-card-actions>\\n      <div mat-dialog-actions class=\\\"submit-button\\\">\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!kpir.valid\\\" type=\\\"submit\\\">Zapisz</button>\\n        <button mat-raised-button color=\\\"warn\\\" [routerLink]=\\\"[ '/kpir/costs']\\\" type=\\\"button\\\">Anuluj</button>\\n      </div>\\n    </mat-card-actions>\\n  </mat-card>\\n</form>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ContractorSelect, Kpir } from 'src/app/models/models';\nimport { isNullOrUndefined } from 'util';\nimport { ContractorService } from 'src/app/services/contractor.service';\nimport { KpirService } from 'src/app/services/kpir.service';\nimport { Router } from '@angular/router';\nimport { SnackBarService } from 'src/app/components/snackbar/snack-bar.service';\nimport { MAT_DATE_LOCALE, DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport { MomentDateAdapter, MAT_MOMENT_DATE_FORMATS } from '@angular/material-moment-adapter';\nimport { ErrorFieldsMatcherService } from 'src/app/services/error-fields-matcher.service';\n\n@Component({\n  selector: 'app-kpir-costs',\n  templateUrl: './kpir-costs.component.html',\n  styleUrls: ['./kpir-costs.component.css', '../../app.component.css'],\n  providers: [\n    { provide: MAT_DATE_LOCALE, useValue: 'pl-PL' },\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n    {provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS},\n  ],\n})\nexport class KpirCostsComponent implements OnInit {\n  kpir = this.fb.group({\n    idx: null,\n    economicEventDate: [null, Validators.required],\n    registrationNumber: [null, Validators.required],\n    contractor: [null, Validators.required],\n    description: [null, Validators.required],\n    purchaseCosts: [null, Validators.required],\n    purchaseSideCosts: [null, Validators.required],\n    paymentCost:[null, Validators.required],\n    otherCosts: [null, Validators.required],\n    sumCosts: null,\n    other: [null, Validators.required],\n    radDescription: null,\n    radCosts: [null, Validators.required],\n    payed: [null, Validators.required],\n    comments: null,\n    paymentDateMin: [null, Validators.required],\n    paymentDateMax: [null, Validators.required],\n  });\n  contractors: ContractorSelect[];\n\n  constructor(\n    private fb: FormBuilder,\n    public matcher: ErrorFieldsMatcherService,\n    private contractorService: ContractorService,\n    private service: KpirService,\n    private snackbar: SnackBarService,\n    private router: Router,\n  ) {\n    this.contractorService.getAllSelect().subscribe(result => {\n      this.contractors = result;\n    });\n  }\n\n  ngOnInit(): void {\n    if (isNullOrUndefined(this.service.kpirId)) {\n      this.service.getNextIdx().subscribe(result => {\n        let today = new Date();\n        this.kpir.patchValue({ idx: result, economicEventDate: today });\n      })\n    } else {\n      this.service.getOne(this.service.kpirId).subscribe(result => {\n        this.kpir.patchValue(result);\n      })\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.service.kpirId = undefined;\n  }\n\n  calculateSumCosts() {\n    return Number(this.kpir.value.paymentCost) + Number(this.kpir.value.otherCosts);\n  }\n\n  save(model: Kpir, isValid: boolean) {\n    if (isValid) {\n      model.sumCosts = this.calculateSumCosts();\n      model.type = 'COSTS';\n      if (isNaN(this.service.kpirId)) {\n        this.service.create(model).subscribe(result => {\n          if (result) {\n            this.snackbar.show(\"Utworzono nowy rozchód\")\n          } else {\n            this.snackbar.show(\"Błąd, nie utworzono rozchodu\")\n          }\n        })\n      } else {\n        model.id = this.service.kpirId;\n        this.service.update(model).subscribe(result => {\n          if (result) {\n            this.snackbar.show(\"Uaktualniono rozchód\")\n          } else {\n            this.snackbar.show(\"Błąd, nie utworzono rozchodu\")\n          }\n        })\n      }\n      this.service.kpirId = null;\n      this.router.navigateByUrl(\"/kpir/costs\");\n    }\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvY29tcG9uZW50cy9rcGlyLWluY29tZS9rcGlyLWluY29tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h1 class=\\\"title\\\">Ewidencja przychodów\\n  <hr>\\n</h1>\\n\\n<form [formGroup]=\\\"kpir\\\" novalidate (ngSubmit)=\\\"save(kpir.value, kpir.valid)\\\">\\n  <mat-card class=\\\"container\\\">\\n    <mat-card-header>\\n      <mat-card-title>Ewidencja z dnia {{kpir.value.economicEventDate | date: 'dd-MM-yyyy'}} o numerze\\n        {{kpir.value.idx}}</mat-card-title>\\n    </mat-card-header>\\n\\n    <mat-card-content>\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput [matDatepicker]=\\\"economicEvent\\\"\\n          placeholder=\\\"Data zdarzenia gospodarczego\\\" formControlName=\\\"economicEventDate\\\" (click)=\\\"economicEvent.open()\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"economicEvent\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #economicEvent></mat-datepicker>\\n        <mat-error *ngIf=\\\"kpir.controls['economicEventDate'].hasError('required')\\\">\\n          Proszę opis zdarzenia gospodarczego.\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-select class=\\\"form-field\\\" placeholder=\\\"Wybierz kontrahenta\\\" formControlName=\\\"contractor\\\" [errorStateMatcher]=\\\"matcher\\\">\\n        <mat-option *ngFor=\\\"let contr of contractors\\\" [value]=\\\"contr.id\\\">\\n          {{contr.company}}\\n        </mat-option>\\n        <mat-error *ngIf=\\\"kpir.controls['contractor'].hasError('required')\\\">\\n          Proszę wybrać kontrahenta.\\n        </mat-error>\\n      </mat-select>\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Nr dowodu księgowego\\\" formControlName=\\\"registrationNumber\\\" [errorStateMatcher]=\\\"matcher\\\">\\n        <mat-error *ngIf=\\\"kpir.controls['registrationNumber'].hasError('required')\\\">\\n          Proszę nr dowodu księgowego.\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Opis zdarzenia gospodarczego\\\" formControlName=\\\"description\\\" [errorStateMatcher]=\\\"matcher\\\">\\n        <mat-error *ngIf=\\\"kpir.controls['description'].hasError('required')\\\">\\n          Proszę opis zdarzenia gospodarczego.\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Wartość sprzedanych towarów i usług\\\" type=\\\"number\\\" formControlName=\\\"soldIncome\\\"\\n          [errorStateMatcher]=\\\"matcher\\\">\\n      </mat-form-field>\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Pozostałe przychody\\\" type=\\\"number\\\" formControlName=\\\"otherIncome\\\"\\n          [errorStateMatcher]=\\\"matcher\\\">\\n      </mat-form-field>\\n      <div >\\n        <p>Razem przychód: {{calculateAllIncome()}}</p>\\n      </div>\\n      <mat-checkbox formControlName=\\\"payed\\\">Czy opacono fakturę?</mat-checkbox>\\n\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput [max]=\\\"kpir.value.paymentDateMax\\\" [matDatepicker]=\\\"paymentDateMinEvent\\\" placeholder=\\\"Terminowa data patności\\\"\\n          formControlName=\\\"paymentDateMin\\\" (click)=\\\"paymentDateMinEvent.open()\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"paymentDateMinEvent\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #paymentDateMinEvent></mat-datepicker>\\n        <mat-error *ngIf=\\\"kpir.controls['paymentDateMin'].hasError('required')\\\">\\n          Proszę opis zdarzenia gospodarczego.\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput [min]=\\\"kpir.value.paymentDateMin\\\" [matDatepicker]=\\\"paymentDateMaxEvent\\\" placeholder=\\\"Ostateczna data płatności\\\"\\n          formControlName=\\\"paymentDateMax\\\" (click)=\\\"paymentDateMaxEvent.open()\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"paymentDateMaxEvent\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #paymentDateMaxEvent></mat-datepicker>\\n        <mat-error *ngIf=\\\"kpir.controls['paymentDateMax'].hasError('required')\\\">\\n          Proszę opis zdarzenia gospodarczego.\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"form-field\\\">\\n          <input matInput placeholder=\\\"Uwagi\\\" formControlName=\\\"comments\\\" [errorStateMatcher]=\\\"matcher\\\">\\n      </mat-form-field>\\n    </mat-card-content>\\n    <mat-card-actions>\\n      <div mat-dialog-actions class=\\\"submit-button\\\">\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!kpir.valid\\\" type=\\\"submit\\\">Zapisz</button>\\n        <button mat-raised-button color=\\\"warn\\\" [routerLink]=\\\"[ '/kpir/income']\\\" type=\\\"button\\\">Anuluj</button>\\n      </div>\\n    </mat-card-actions>\\n  </mat-card>\\n</form>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ContractorSelect, Kpir } from 'src/app/models/models';\nimport { isNullOrUndefined } from 'util';\nimport { ContractorService } from 'src/app/services/contractor.service';\nimport { KpirService } from 'src/app/services/kpir.service';\nimport { Router } from '@angular/router';\nimport { SnackBarService } from 'src/app/components/snackbar/snack-bar.service';\nimport { MAT_DATE_LOCALE, DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport { MomentDateAdapter, MAT_MOMENT_DATE_FORMATS } from '@angular/material-moment-adapter';\nimport { ErrorFieldsMatcherService } from 'src/app/services/error-fields-matcher.service';\n\n@Component({\n  selector: 'app-kpir-income',\n  templateUrl: './kpir-income.component.html',\n  styleUrls: ['./kpir-income.component.css', '../../app.component.css'],\n  providers: [\n    { provide: MAT_DATE_LOCALE, useValue: 'pl-PL' },\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n    {provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS},\n  ],\n})\nexport class KpirIncomeComponent implements OnInit, OnDestroy {\n  kpir = this.fb.group({\n    idx: null,\n    economicEventDate: [null, Validators.required],\n    registrationNumber: [null, Validators.required],\n    contractor: [null, Validators.required],\n    description: [null, Validators.required],\n    soldIncome: [null, Validators.required],\n    otherIncome: [null, Validators.required],\n    payed: [null, Validators.required],\n    comments: null,\n    paymentDateMin: [null, Validators.required],\n    paymentDateMax: [null, Validators.required],\n    allIncome: null\n  });\n  contractors: ContractorSelect[];\n\n  constructor(\n    private fb: FormBuilder,\n    private contractorService: ContractorService,\n    private service: KpirService,\n    private snackbar: SnackBarService,\n    public matcher: ErrorFieldsMatcherService,\n    private router: Router,\n  ) {\n    this.contractorService.getAllSelect().subscribe(result => {\n      this.contractors = result;\n    });\n  }\n\n  ngOnInit(): void {\n    if (isNullOrUndefined(this.service.kpirId)) {\n      this.service.getNextIdx().subscribe(result => {\n        let today = new Date();\n        this.kpir.patchValue({ idx: result, economicEventDate: today });\n      })\n    } else {\n      this.service.getOne(this.service.kpirId).subscribe(result => {\n        this.kpir.patchValue(result);\n\n      })\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.service.kpirId = undefined;\n  }\n\n  calculateAllIncome() {\n    return Number(this.kpir.value.soldIncome) + Number(this.kpir.value.otherIncome);\n  }\n\n  save(model: Kpir, isValid: boolean) {\n    if (isValid) {\n      model.allIncome = this.calculateAllIncome();\n      model.type = 'INCOME';\n      if (isNaN(this.service.kpirId)) {\n        this.service.create(model).subscribe(result => {\n          if (result) {\n            this.snackbar.show(\"Utworzono nowegy przychód\")\n          } else {\n            this.snackbar.show(\"Błąd, nie utworzono przychódu\")\n          }\n        })\n      } else {\n        model.id = this.service.kpirId;\n        this.service.update(model).subscribe(result => {\n          if (result) {\n            this.snackbar.show(\"Uaktualniono przychód\")\n          } else {\n            this.snackbar.show(\"Błąd, nie utworzono przychódu\")\n          }\n        })\n      }\n      this.service.kpirId = null;\n      this.router.navigateByUrl(\"/kpir/income\");\n    }\n  }\n\n}\n","module.exports = \"\\ntable th {\\n    text-align: center;\\n    margin-left: auto;\\n    margin-right: auto;\\n  }\\n  \\n  .text-center {\\n    text-align: center;\\n  }\\n  \\n  .table {\\n    width: 100%;\\n  }\\n  \\n  .filter {\\n    width: 80%;\\n    padding: 20px;\\n    margin-left: auto;\\n    margin-right: auto;\\n  }\\n  \\n  .mat-card-header > mat-card-header-text {\\n    width: 100%;\\n    text-align: center;\\n  }\\n  \\n  .filter-forms, .mat-checkbox-layout {\\n    width: 100%;\\n  }\\n  \\n  mat-form-field, mat-checkbox {\\n    margin-right: 20px;\\n    width: 250px;\\n  }\\n  \\n  .new-contractor-button {\\n    float: right;\\n    width: 250px;\\n    margin: 10px;\\n  }\\n  \\n  .content {\\n    width: 90%;\\n    height: 700px;\\n    margin-left: auto;\\n    margin-right: auto;\\n  }\\n  \\n  .text-headers {\\n    width: 200px;\\n    margin-bottom: 15px;\\n    max-width: 300px;\\n    padding: 0px 5px 5px 0px;\\n  }\\n  \\n  .text-headers-mid {\\n    width: 150px;\\n    margin-bottom: 15px;\\n    max-width: 200px;\\n    padding: 0px 5px 5px 0px;\\n  }\\n  \\n  .mat-footer-cell {\\n    margin: 10px 0 0 10px\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9jb21wb25lbnRzL2twaXItcHJpbnQva3Bpci1wcmludC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtJQUNJLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsbUJBQW1CO0dBQ3BCOztFQUVEO0lBQ0UsbUJBQW1CO0dBQ3BCOztFQUVEO0lBQ0UsWUFBWTtHQUNiOztFQUVEO0lBQ0UsV0FBVztJQUNYLGNBQWM7SUFDZCxrQkFBa0I7SUFDbEIsbUJBQW1CO0dBQ3BCOztFQUVEO0lBQ0UsWUFBWTtJQUNaLG1CQUFtQjtHQUNwQjs7RUFFRDtJQUNFLFlBQVk7R0FDYjs7RUFFRDtJQUNFLG1CQUFtQjtJQUNuQixhQUFhO0dBQ2Q7O0VBRUQ7SUFDRSxhQUFhO0lBQ2IsYUFBYTtJQUNiLGFBQWE7R0FDZDs7RUFFRDtJQUNFLFdBQVc7SUFDWCxjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLG1CQUFtQjtHQUNwQjs7RUFFRDtJQUNFLGFBQWE7SUFDYixvQkFBb0I7SUFDcEIsaUJBQWlCO0lBQ2pCLHlCQUF5QjtHQUMxQjs7RUFFRDtJQUNFLGFBQWE7SUFDYixvQkFBb0I7SUFDcEIsaUJBQWlCO0lBQ2pCLHlCQUF5QjtHQUMxQjs7RUFDRDtJQUNFLHFCQUFxQjtHQUN0QiIsImZpbGUiOiJhcHAvY29tcG9uZW50cy9rcGlyLXByaW50L2twaXItcHJpbnQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxudGFibGUgdGgge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIH1cbiAgXG4gIC50ZXh0LWNlbnRlciB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG4gIFxuICAudGFibGUge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIFxuICAuZmlsdGVyIHtcbiAgICB3aWR0aDogODAlO1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICB9XG4gIFxuICAubWF0LWNhcmQtaGVhZGVyID4gbWF0LWNhcmQtaGVhZGVyLXRleHQge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxuICBcbiAgLmZpbHRlci1mb3JtcywgLm1hdC1jaGVja2JveC1sYXlvdXQge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIFxuICBtYXQtZm9ybS1maWVsZCwgbWF0LWNoZWNrYm94IHtcbiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG4gICAgd2lkdGg6IDI1MHB4O1xuICB9XG4gIFxuICAubmV3LWNvbnRyYWN0b3ItYnV0dG9uIHtcbiAgICBmbG9hdDogcmlnaHQ7XG4gICAgd2lkdGg6IDI1MHB4O1xuICAgIG1hcmdpbjogMTBweDtcbiAgfVxuICBcbiAgLmNvbnRlbnQge1xuICAgIHdpZHRoOiA5MCU7XG4gICAgaGVpZ2h0OiA3MDBweDtcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIH1cbiAgXG4gIC50ZXh0LWhlYWRlcnMge1xuICAgIHdpZHRoOiAyMDBweDtcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xuICAgIG1heC13aWR0aDogMzAwcHg7XG4gICAgcGFkZGluZzogMHB4IDVweCA1cHggMHB4O1xuICB9XG5cbiAgLnRleHQtaGVhZGVycy1taWQge1xuICAgIHdpZHRoOiAxNTBweDtcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xuICAgIG1heC13aWR0aDogMjAwcHg7XG4gICAgcGFkZGluZzogMHB4IDVweCA1cHggMHB4O1xuICB9XG4gIC5tYXQtZm9vdGVyLWNlbGwge1xuICAgIG1hcmdpbjogMTBweCAwIDAgMTBweFxuICB9Il19 */\"","module.exports = \"<h1 class=\\\"title\\\" sticky>Księga przychodów i rozchodów - wydruk\\n    <hr>\\n</h1>\\n\\n<form [formGroup]=\\\"kpirFilter\\\" class=\\\"filter\\\" novalidate>\\n    <mat-card class=\\\"filter-forms\\\">\\n        <mat-card-header>\\n            <mat-card-title>Wydruk do pdf księgi przychodów i rozchodów</mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content>\\n            <mat-form-field>\\n                <mat-select placeholder=\\\"Wybierz rok rozliczeniowy\\\" formControlName=\\\"selectedYear\\\">\\n                    <mat-option></mat-option>\\n                    <mat-option *ngFor=\\\"let year of years\\\" [value]=\\\"year\\\">{{year}}</mat-option>\\n                </mat-select>\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n                <input matInput [min]=\\\"economicEventMinDate\\\" [max]=\\\"economicEventMaxDate\\\" [matDatepicker]=\\\"economicEvent\\\"\\n                    placeholder=\\\"Data zdarzenia gospodarczego\\\" formControlName=\\\"economicEventDate\\\" (click)=\\\"economicEvent.open()\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"economicEvent\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #economicEvent></mat-datepicker>\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n                <input matInput placeholder=\\\"Nazwa kontrahenta\\\" formControlName=\\\"company\\\">\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n                <input matInput placeholder=\\\"Nip kontrahenta\\\" type=\\\"number\\\" formControlName=\\\"nip\\\">\\n            </mat-form-field>\\n\\n            <mat-checkbox formControlName=\\\"isPayed\\\">Pokaź opłacone</mat-checkbox>\\n            <mat-checkbox formControlName=\\\"notPayed\\\">Pokaź nieopłacone</mat-checkbox>\\n            <mat-checkbox formControlName=\\\"overdue\\\">Pokaź po terminie płatności</mat-checkbox>\\n        </mat-card-content>\\n        <mat-card-actions>\\n            <div mat-dialog-actions class=\\\"submit-button\\\">\\n                <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"showFile(kpirFilter.value)\\\">Wyświetl pdf</button>\\n                <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"sendMail(kpirFilter.value)\\\">Wyślij na email</button>\\n            </div>\\n        </mat-card-actions>\\n    </mat-card>\\n</form>\\n\\n<mat-card *ngIf=\\\"pdfFile!=null\\\" class=\\\"content\\\">\\n    <object [attr.data]=\\\"pdfFile\\\" type=\\\"application/pdf\\\" width=\\\"100%\\\" height=\\\"100%\\\"></object>\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { KpirFilter, Kpir } from 'src/app/models/models';\nimport { PrinterService } from 'src/app/services/printer.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { MAT_DATE_LOCALE, MAT_DATE_FORMATS, DateAdapter } from '@angular/material';\nimport { MomentDateAdapter, MAT_MOMENT_DATE_FORMATS } from '@angular/material-moment-adapter';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { SnackBarService } from '../snackbar/snack-bar.service';\n\n\n@Component({\n  selector: 'app-kpir-print',\n  templateUrl: './kpir-print.component.html',\n  styleUrls: ['./kpir-print.component.css', '../../app.component.css'],\n  providers: [\n    { provide: MAT_DATE_LOCALE, useValue: 'pl-PL' },\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n    { provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS },\n  ],\n})\nexport class KpirPrintComponent implements OnInit {\n  filter: KpirFilter;\n  temp: Date;\n  globalMinDate: Date;\n  economicEventMinDate: Date;\n  economicEventMaxDate: Date;\n  years: number[] = [];\n  pdfFile: SafeResourceUrl;\n\n  kpirFilter = this.fb.group({\n    company: [null, [Validators.maxLength(15)]],\n    nip: [null, [Validators.maxLength(15)]],\n    economicEventDate: [null, [Validators.maxLength(15)]],\n    isPayed: [null],\n    notPayed: [null],\n    overdue: [null],\n    selectedYear: null,\n  })\n\n  constructor(\n    private fb: FormBuilder,\n    private service: PrinterService,\n    private userService: UserService,\n    private domSanitizer: DomSanitizer,\n    private snackbar: SnackBarService\n  ) {\n  }\n\n  ngOnInit() {\n    this.userService.getRegistrationDate().subscribe(result => {\n      this.temp = new Date()\n      this.globalMinDate = new Date(result);\n      this.economicEventMinDate = new Date(this.globalMinDate.getFullYear(), this.globalMinDate.getMonth(), 1);\n      this.economicEventMaxDate = new Date(this.temp.getFullYear(), (this.temp.getMonth()) + 1), 0;\n      for (let i = this.temp.getFullYear(); i >= this.globalMinDate.getFullYear(); i--) {\n        this.years.push(i);\n      }\n      this.filter = {\n        company: null, nip: null, economicEventDate: null, isPayed: false,\n        notPayed: false, overdue: false, registrationNumber: null, type: null,\n        selectedYear: this.temp.getFullYear(), selectedMonth: null\n      }\n      this.kpirFilter.patchValue(this.filter);\n    })\n  }\n\n  fill(model: KpirFilter) {\n    this.filter = model;\n  }\n\n  showFile(model: KpirFilter) {\n    this.service.getKpirAllBlob(model).subscribe((data: Blob) => {\n      let blob = new Blob([data], { type: 'application/pdf' });\n      let url = window.URL.createObjectURL(blob);\n      this.pdfFile = this.domSanitizer.bypassSecurityTrustResourceUrl(url);\n    })\n  }\n\n  sendMail(model: KpirFilter) {\n    this.service.sendKpirAllViaMail(model).subscribe();\n    this.snackbar.show(\"Mail został wysłany na skrzynkę podaną w ustawieniach\")\n  }\n}\n","module.exports = \"\\ntable th {\\n  text-align: center;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\n.text-center {\\n  text-align: center;\\n}\\n\\n.table {\\n  width: 100%;\\n}\\n\\n.filter {\\n  width: 80%;\\n  padding: 20px;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\n.mat-card-header > mat-card-header-text {\\n  width: 100%;\\n  text-align: center;\\n}\\n\\n.filter-forms, .mat-checkbox-layout {\\n  width: 100%;\\n}\\n\\nmat-form-field, mat-checkbox {\\n  margin-right: 20px;\\n  width: 250px;\\n}\\n\\n.new-contractor-button {\\n  float: right;\\n  width: 250px;\\n  margin: 10px;\\n}\\n\\n.content {\\n  width: 90%;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\n.text-headers {\\n  width: 200px;\\n  margin-bottom: 15px;\\n  max-width: 300px;\\n  padding: 0px 5px 5px 0px;\\n}\\n\\n.mat-footer-cell {\\n  margin: 10px 0 0 10px\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9jb21wb25lbnRzL2twaXIva3Bpci1pbmNvbWUtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtFQUNFLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIsbUJBQW1CO0NBQ3BCOztBQUVEO0VBQ0UsbUJBQW1CO0NBQ3BCOztBQUVEO0VBQ0UsWUFBWTtDQUNiOztBQUVEO0VBQ0UsV0FBVztFQUNYLGNBQWM7RUFDZCxrQkFBa0I7RUFDbEIsbUJBQW1CO0NBQ3BCOztBQUVEO0VBQ0UsWUFBWTtFQUNaLG1CQUFtQjtDQUNwQjs7QUFFRDtFQUNFLFlBQVk7Q0FDYjs7QUFFRDtFQUNFLG1CQUFtQjtFQUNuQixhQUFhO0NBQ2Q7O0FBRUQ7RUFDRSxhQUFhO0VBQ2IsYUFBYTtFQUNiLGFBQWE7Q0FDZDs7QUFFRDtFQUNFLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsbUJBQW1CO0NBQ3BCOztBQUVEO0VBQ0UsYUFBYTtFQUNiLG9CQUFvQjtFQUNwQixpQkFBaUI7RUFDakIseUJBQXlCO0NBQzFCOztBQUNEO0VBQ0UscUJBQXFCO0NBQ3RCIiwiZmlsZSI6ImFwcC9jb21wb25lbnRzL2twaXIva3Bpci1pbmNvbWUtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG50YWJsZSB0aCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbn1cblxuLnRleHQtY2VudGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4udGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmZpbHRlciB7XG4gIHdpZHRoOiA4MCU7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG59XG5cbi5tYXQtY2FyZC1oZWFkZXIgPiBtYXQtY2FyZC1oZWFkZXItdGV4dCB7XG4gIHdpZHRoOiAxMDAlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5maWx0ZXItZm9ybXMsIC5tYXQtY2hlY2tib3gtbGF5b3V0IHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbm1hdC1mb3JtLWZpZWxkLCBtYXQtY2hlY2tib3gge1xuICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG4gIHdpZHRoOiAyNTBweDtcbn1cblxuLm5ldy1jb250cmFjdG9yLWJ1dHRvbiB7XG4gIGZsb2F0OiByaWdodDtcbiAgd2lkdGg6IDI1MHB4O1xuICBtYXJnaW46IDEwcHg7XG59XG5cbi5jb250ZW50IHtcbiAgd2lkdGg6IDkwJTtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbn1cblxuLnRleHQtaGVhZGVycyB7XG4gIHdpZHRoOiAyMDBweDtcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcbiAgbWF4LXdpZHRoOiAzMDBweDtcbiAgcGFkZGluZzogMHB4IDVweCA1cHggMHB4O1xufVxuLm1hdC1mb290ZXItY2VsbCB7XG4gIG1hcmdpbjogMTBweCAwIDAgMTBweFxufSJdfQ== */\"","module.exports = \"<h1 class=\\\"title\\\" sticky>Księga przychodów i rozchodów - przychody\\n    <hr>\\n</h1>\\n\\n\\n<form [formGroup]=\\\"kpirFilter\\\" class=\\\"filter\\\" novalidate (ngSubmit)=\\\"doFilter(kpirFilter.value)\\\">\\n    <mat-card class=\\\"filter-forms\\\">\\n        <mat-card-header>\\n            <mat-card-title>Filtrowanie</mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content>\\n            <mat-form-field>\\n                <mat-select placeholder=\\\"Wybierz rok rozliczeniowy\\\" formControlName=\\\"selectedYear\\\" (selectionChange)=\\\"changeYear()\\\">\\n                    <mat-option></mat-option>\\n                    <mat-option *ngFor=\\\"let year of years\\\" [value]=\\\"year\\\">{{year}}</mat-option>\\n                </mat-select>\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n                <mat-select placeholder=\\\"Wybierz miesiąc rozliczeniowy\\\" formControlName=\\\"selectedMonth\\\">\\n                    <mat-option *ngIf=\\\"checkSelectedYear()\\\" [value]=\\\"null\\\">wybierz najpierw rok</mat-option>\\n                    <mat-option *ngIf=\\\"!checkSelectedYear()\\\" [value]=\\\"null\\\">-- anuluj --</mat-option>\\n                    <mat-option *ngFor=\\\"let month of months\\\" [value]=\\\"month.no\\\">{{month.name}}</mat-option>\\n                    <mat-option *ngIf=\\\"!checkSelectedYear()\\\" [value]=\\\"null\\\">-- anuluj --</mat-option>\\n                </mat-select>\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n                <input matInput [min]=\\\"economicEventMinDate\\\" [max]=\\\"economicEventMaxDate\\\" [matDatepicker]=\\\"economicEvent\\\"\\n                    placeholder=\\\"Data zdarzenia gospodarczego\\\" formControlName=\\\"economicEventDate\\\" (click)=\\\"economicEvent.open()\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"economicEvent\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #economicEvent></mat-datepicker>\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n                <input matInput placeholder=\\\"Nazwa kontrahenta\\\" formControlName=\\\"company\\\">\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n                <input matInput placeholder=\\\"Nip kontrahenta\\\" type=\\\"number\\\" formControlName=\\\"nip\\\">\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n                <input matInput placeholder=\\\"Numer dowodu księgowego\\\" formControlName=\\\"registrationNumber\\\">\\n            </mat-form-field>\\n\\n            <mat-checkbox formControlName=\\\"isPayed\\\">Pokaź opłacone</mat-checkbox>\\n            <mat-checkbox formControlName=\\\"notPayed\\\">Pokaź nieopłacone</mat-checkbox>\\n            <mat-checkbox formControlName=\\\"overdue\\\">Pokaź po terminie płatności</mat-checkbox>\\n        </mat-card-content>\\n        <mat-card-actions>\\n            <div mat-dialog-actions class=\\\"submit-button\\\">\\n                <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Filtruj</button>\\n            </div>\\n        </mat-card-actions>\\n    </mat-card>\\n</form>\\n\\n\\n<mat-card class=\\\"content\\\">\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"button new-contractor-button\\\" [routerLink]=\\\"['/kpir/income/add']\\\">Dodaj\\n        ewidencję przychodów</button>\\n    <table mat-table class=\\\"table\\\" [dataSource]=\\\"dataSource\\\" matSort>\\n        <!-- 1 -->\\n        <ng-container matColumnDef=\\\"idx\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header rowspan=\\\"2\\\">Lp.</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.idx}}</td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n        <!-- 2 -->\\n        <ng-container matColumnDef=\\\"economicEventDate\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header rowspan=\\\"2\\\">Data<br>zdarzenia<br>gospodarczego</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.economicEventDate | date: 'dd-MM-yyyy'}}</td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n        <!-- 3 -->\\n        <ng-container matColumnDef=\\\"registrationNumber\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header rowspan=\\\"2\\\">Numer<br>dowodu<br>księgowego</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.registrationNumber}}</td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n        <!-- t1 -->\\n        <ng-container matColumnDef=\\\"consumer\\\">\\n            <th mat-header-cell *matHeaderCellDef colspan=\\\"1\\\">kontrahent</th>\\n        </ng-container>\\n        <!-- 4 -->\\n        <ng-container matColumnDef=\\\"fullName\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"text-headers\\\">imię i nazwisko (firma)<br>adres</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.fullName}}<br>{{element.address}}</td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n        <!-- 6 -->\\n        <ng-container matColumnDef=\\\"description\\\">\\n            <th mat-header-cell *matHeaderCellDef class=\\\"text-headers\\\" rowspan=\\\"2\\\">Opis<br>zdarzenia<br>gospodarczego</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.description}}</td>\\n            <td mat-footer-cell *matFooterCellDef> Suma bierzącej strony<br>\\n                <hr>Razem od początku {{ getName() }} </td>\\n        </ng-container>\\n        <!-- t2 -->\\n        <ng-container matColumnDef=\\\"income\\\">\\n            <th mat-header-cell *matHeaderCellDef colspan=\\\"3\\\">Przychód</th>\\n        </ng-container>\\n        <!-- 7 -->\\n        <ng-container matColumnDef=\\\"soldIncome\\\">\\n            <th mat-header-cell *matHeaderCellDef>wartość<br>sprzedanych<br>towarów<br>i usług</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-center\\\">{{element.soldIncome}}</td>\\n            <td mat-footer-cell *matFooterCellDef class=\\\"text-center\\\">{{getPagedSoldIncome()}}<br>\\n                <hr>{{getSoldIncome()}}</td>\\n        </ng-container>\\n        <!-- 8 -->\\n        <ng-container matColumnDef=\\\"otherIncome\\\">\\n            <th mat-header-cell *matHeaderCellDef>pozostałe<br>przychody</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-center\\\">{{element.otherIncome}}</td>\\n            <td mat-footer-cell *matFooterCellDef class=\\\"text-center\\\">{{getPagedOtherIncome()}}<br>\\n                <hr>{{getOtherIncome()}}</td>\\n        </ng-container>\\n        <!-- 9 -->\\n        <ng-container matColumnDef=\\\"allIncome\\\">\\n            <th mat-header-cell *matHeaderCellDef>razem<br>przychód</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-center\\\">{{element.allIncome}}</td>\\n            <td mat-footer-cell *matFooterCellDef class=\\\"text-center\\\">{{getPagedAllIncome()}}<br>\\n                <hr>{{getAllIncome()}}</td>\\n        </ng-container>\\n        <!-- 17 -->\\n        <ng-container matColumnDef=\\\"comments\\\">\\n            <th mat-header-cell *matHeaderCellDef class=\\\"text-headers\\\" rowspan=\\\"2\\\">Uwagi</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.comments}}</td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n        <!-- akcje -->\\n        <ng-container matColumnDef=\\\"actions\\\">\\n            <th mat-header-cell *matHeaderCellDef rowspan=\\\"2\\\">Akcje</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-center\\\">\\n                <mat-icon mat-flat-button color=\\\"primary\\\" matTooltip=\\\"Edytuj przychód\\\" (click)=\\\"edit(element)\\\">edit</mat-icon>\\n                <mat-icon mat-flat-button color=\\\"warn\\\" matTooltip=\\\"Usuń przychód\\\" (click)=\\\"delete(element)\\\">delete</mat-icon>\\n            </td>\\n            <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"headerFirstLine sticky: true\\\"></tr>\\n        <tr mat-header-row *matHeaderRowDef=\\\"headerSecondLine sticky: true\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let element; columns: columns;\\\"></tr>\\n        <tr mat-footer-row *matFooterRowDef=\\\"columns; sticky: true\\\"></tr>\\n    </table>\\n\\n    <mat-paginator #paginator [pageSizeOptions]=\\\"[10, 25, 100]\\\"></mat-paginator>\\n</mat-card>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort, MatDatepicker, DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS, MatDialog } from '@angular/material';\nimport { KpirListDataSource } from '../../datasource/kpir-datasource';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MomentDateAdapter, MAT_MOMENT_DATE_FORMATS } from '@angular/material-moment-adapter';\nimport { Router } from '@angular/router';\nimport { Kpir, KpirFilter, YesNoDialogData } from 'src/app/models/models';\nimport { KpirService } from 'src/app/services/kpir.service';\nimport { isNullOrUndefined, isUndefined } from 'util';\nimport { UserService } from 'src/app/services/user.service';\nimport { first } from 'rxjs/operators';\nimport { Global } from 'src/app/models/global';\nimport { SnackBarService } from 'src/app/components/snackbar/snack-bar.service';\nimport { YesNoDialog } from '../dialog/yes-no-dialog/yes-no-dialog.component';\nimport { formatDate } from '@angular/common';\n\n@Component({\n  selector: 'app-kpir-income-list',\n  templateUrl: './kpir-income-list.component.html',\n  styleUrls: ['./kpir-income-list.component.css', '../../app.component.css'],\n  providers: [\n    { provide: MAT_DATE_LOCALE, useValue: 'pl-PL' },\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n    { provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS },\n  ],\n})\nexport class KpirIncomeListComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  columns = [\"idx\", \"economicEventDate\", \"registrationNumber\", \"fullName\", \"description\", \"soldIncome\", \"otherIncome\", \"allIncome\", \"comments\", \"actions\"];\n  headerFirstLine = [\"idx\", \"economicEventDate\", \"registrationNumber\", \"consumer\", \"description\", \"income\", \"comments\", \"actions\"];\n  headerSecondLine = [\"fullName\", \"soldIncome\", \"otherIncome\", \"allIncome\"];\n  dataSource: KpirListDataSource;\n  filter: KpirFilter;\n  kpirs: Kpir[];\n  \n  temp: Date;\n  globalMinDate: Date;\n  economicEventMinDate: Date;\n  economicEventMaxDate: Date;\n  years: number[] = [];\n  months: any[] = [];\n\n  kpirFilter = this.fb.group({\n    company: [null, [Validators.maxLength(15)]],\n    nip: [null, [Validators.maxLength(15)]],\n    registrationNumber: [null, [Validators.maxLength(15)]],\n    economicEventDate: [null, [Validators.maxLength(15)]],\n    isPayed: null,\n    notPayed: null,\n    overdue: null,\n    selectedYear: null,\n    selectedMonth: null,\n    type: null,\n  })\n\n  constructor(\n    private router: Router,\n    private fb: FormBuilder,\n    private service: KpirService,\n    private userService: UserService,\n    private snackbar: SnackBarService,\n    private dialog: MatDialog,\n  ) {\n  }\n\n  ngOnInit() {\n    this.temp = new Date()\n    this.filter = {\n      company: null, nip: null, economicEventDate: null, isPayed: null,\n      notPayed: null, overdue: null, registrationNumber: null, type: 'INCOME',\n      selectedYear: this.temp.getFullYear(), selectedMonth: Global.allMonths[this.temp.getMonth()].no\n    }\n    this.kpirFilter.patchValue(this.filter);\n    this.userService.getRegistrationDate().pipe(first()).subscribe(result => {\n      this.globalMinDate = new Date(result);\n      this.economicEventMinDate = new Date(this.globalMinDate.getFullYear(), this.globalMinDate.getMonth(), 1);\n      this.economicEventMaxDate = new Date(this.temp.getFullYear(), (this.temp.getMonth()) + 1), 0;\n      for (let i = this.temp.getFullYear(); i >= this.globalMinDate.getFullYear(); i--) {\n        this.years.push(i);\n      }\n      this.changeYear();\n    })\n    this.refresh();\n  }\n\n  refresh() {\n    this.service.getAll(this.filter).subscribe(result => {\n      this.kpirs = result;\n      if (isNullOrUndefined(this.kpirs)) {\n        this.kpirs = [];\n      }\n      this.dataSource = new KpirListDataSource(this.paginator, this.sort, this.kpirs);\n    })\n  }\n\n  checkSelectedYear(){\n    return isUndefined(this.kpirFilter.value.selectedYear)\n  }\n\n  doFilter(model: KpirFilter) {\n    this.filter = model;\n    this.filter.type = 'INCOME';\n    this.refresh();\n  }\n\n  edit(element: Kpir) {\n    this.service.kpirId = element.id;\n    this.router.navigateByUrl(\"/kpir/income/add\");\n  }\n\n  delete(element: Kpir) {\n    let dialogData: YesNoDialogData = {\n      title: \"Usuwnaie przychodu\",\n      context: \"Czy usunąć przychód nr \" + element.idx + \" z dnia: \" + formatDate(element.economicEventDate, \"dd-MM-yyyy\", \"en-US\") + \"?\",\n      yesButton: \"Usuń\", noButton: \"Anuluj\"\n    };\n    let dialogRef = this.dialog.open(YesNoDialog, { data: dialogData });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.service.delete(element.id).subscribe(\n          result => {\n            if (result) {\n              this.snackbar.show(\"Udało się usunąć przychód\");\n              this.refresh();\n            } else this.snackbar.show(\"Przykro nam, ale nie udało się przychodu\");\n          })\n      }\n    })\n  }\n\n  getSoldIncome() {\n    if (isUndefined(this.dataSource)) { return 0; }\n    return this.dataSource.getData().map(t => t.soldIncome).reduce((acc, value) => acc + value, 0);\n  }\n  getOtherIncome() {\n    if (isUndefined(this.dataSource)) { return 0; }\n    return this.dataSource.getData().map(t => t.otherIncome).reduce((acc, value) => acc + value, 0);\n  }\n  getAllIncome() {\n    if (isUndefined(this.dataSource)) { return 0; }\n    return this.dataSource.getData().map(t => t.allIncome).reduce((acc, value) => acc + value, 0);\n  }\n  getPagedSoldIncome() {\n    if (isUndefined(this.dataSource)) { return 0; }\n    return this.dataSource.getPageData().map(t => t.soldIncome).reduce((acc, value) => acc + value, 0);\n  }\n  getPagedOtherIncome() {\n    if (isUndefined(this.dataSource)) { return 0; }\n    return this.dataSource.getPageData().map(t => t.otherIncome).reduce((acc, value) => acc + value, 0);\n  }\n  getPagedAllIncome() {\n    if (isUndefined(this.dataSource)) { return 0; }\n    return this.dataSource.getPageData().map(t => t.allIncome).reduce((acc, value) => acc + value, 0);\n  }\n\n  getName() {\n    return isNullOrUndefined(this.kpirFilter.value.selectedMonth) ? 'roku' : 'miesiąca';\n  }\n\n  changeYear() {\n    this.months = [];\n    this.kpirFilter.value.selectedMonth = undefined;\n    if (isNullOrUndefined(this.temp)) {\n      this.temp = new Date();\n    }\n    if (this.temp.getFullYear() == this.globalMinDate.getFullYear()) {\n      for (let i = this.globalMinDate.getMonth(); i <= this.temp.getMonth(); i++) {\n        this.months.push(Global.allMonths[i]);\n      }\n    }\n    else if (this.kpirFilter.value.selectedYear == (this.globalMinDate.getFullYear())) {\n      for (let i = this.globalMinDate.getMonth(); i < Global.allMonths.length; i++) {\n        this.months.push(Global.allMonths[i]);\n      }\n    } else if (this.kpirFilter.value.selectedYear == (this.temp.getFullYear())) {\n      for (let i = 0; i <= this.temp.getMonth(); i++) {\n        this.months.push(Global.allMonths[i]);\n      }\n    } else if (this.kpirFilter.value.selectedYear != undefined) {\n      this.months = Global.allMonths;\n    }\n  }\n}","module.exports = \"<h1 class=\\\"title\\\">Logowanie\\n  <hr>\\n</h1>\\n\\n<div class=\\\"container\\\">\\n  <form>\\n    <mat-form-field class=\\\"form-field\\\">\\n      <input matInput placeholder=\\\"Email\\\" [formControl]=\\\"email\\\"\\n             [errorStateMatcher]=\\\"matcher\\\">\\n      <mat-error *ngIf=\\\"email.hasError('email') && !email.hasError('required')\\\">\\n        Proszę wpisać poprawny adres email.\\n      </mat-error>\\n      <mat-error *ngIf=\\\"email.hasError('required')\\\">\\n        Email jest wymagany.\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"form-field\\\">\\n      <input matInput placeholder=\\\"Hasło\\\" [type]=\\\"'password'\\\" \\n            [formControl]=\\\"password\\\" [errorStateMatcher]=\\\"matcher\\\">\\n      <mat-error *ngIf=\\\"password.hasError('required')\\\">\\n        Hasło jest wymagane.\\n      </mat-error>\\n    </mat-form-field>\\n  </form>\\n  <div class=\\\"buttons-panel\\\">\\n      <button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" (click)=\\\"login()\\\">Zaloguj</button>\\n      <button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" (click)=\\\"register()\\\">Zarejestruj</button>\\n  </div>\\n  <div *ngIf=\\\"error\\\" class=\\\"alert alert-danger\\\">{{error}}</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ErrorFieldsMatcherService } from 'src/app/services/error-fields-matcher.service';\nimport { HttpClient } from '@angular/common/http';\nimport { map, first } from 'rxjs/operators';\nimport { Request } from 'selenium-webdriver/http';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['../../app.component.css']\n})\nexport class LoginComponent implements OnInit {\n  headers: any;\n  options: any;\n  email: FormControl;\n  password: FormControl;\n  error: string;\n\n  constructor(\n    private router: Router,\n    public matcher: ErrorFieldsMatcherService,\n    private route: ActivatedRoute,\n    private http: HttpClient,\n    private formBuilder: FormBuilder,\n    private auth: AuthenticationService) { }\n\n  ngOnInit() {\n    this.email = new FormControl('', [\n      Validators.required,\n      Validators.email,\n      Validators.pattern(\"[a-zA-Z0-9.-]+\\@[a-zA-Z0-9.-]+\\.[a-z]+\")\n    ]);\n\n    this.password = new FormControl('', [\n      Validators.required,\n      Validators.minLength(5),\n      Validators.maxLength(12),\n      Validators.pattern(\"[a-zA-Z0-9!@$%^&-+=?]+\")\n    ]);\n    this.auth.logout();\n  }\n\n  register() {\n    this.router.navigateByUrl('registration');\n  }\n\n  login() {\n    if (this.email.valid && this.password.valid) {\n      let as = this.auth.login(this.email.value, this.password.value).pipe(first())\n        .subscribe(\n          islogged => {\n            if (islogged) {\n              this.router.navigateByUrl('/kpir/income');\n            } else {\n              this.error = \"Wpisano niepoprawne dane.\";\n            }\n          },\n          error => {\n            this.error = error;\n          }\n        );\n    }\n  }\n\n}\n","module.exports = \".parcel-field {\\n    width: 45%;\\n    padding-right: 4%\\n}\\n\\n.home-field {\\n    width: 45%;\\n    float: right;\\n}\\n\\n.zip-field {\\n    width: 30%;\\n}\\n\\n.city-field {\\n    width: 65%;\\n    float: right;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9jb21wb25lbnRzL3JlZ2lzdHJhdGlvbi9yZWdpc3RyYXRpb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxpQkFBaUI7Q0FDcEI7O0FBRUQ7SUFDSSxXQUFXO0lBQ1gsYUFBYTtDQUNoQjs7QUFFRDtJQUNJLFdBQVc7Q0FDZDs7QUFFRDtJQUNJLFdBQVc7SUFDWCxhQUFhO0NBQ2hCIiwiZmlsZSI6ImFwcC9jb21wb25lbnRzL3JlZ2lzdHJhdGlvbi9yZWdpc3RyYXRpb24uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wYXJjZWwtZmllbGQge1xuICAgIHdpZHRoOiA0NSU7XG4gICAgcGFkZGluZy1yaWdodDogNCVcbn1cblxuLmhvbWUtZmllbGQge1xuICAgIHdpZHRoOiA0NSU7XG4gICAgZmxvYXQ6IHJpZ2h0O1xufVxuXG4uemlwLWZpZWxkIHtcbiAgICB3aWR0aDogMzAlO1xufVxuXG4uY2l0eS1maWVsZCB7XG4gICAgd2lkdGg6IDY1JTtcbiAgICBmbG9hdDogcmlnaHQ7XG59Il19 */\"","module.exports = \"<h1 class=\\\"title\\\">Rejestracja nowego uzytkownika\\n  <hr>\\n</h1>\\n\\n<mat-card class=\\\"container\\\">\\n  <form>\\n    <mat-card-header>\\n      <mat-card-title>Dane do logowania</mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n\\n      <hr>\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Email\\\" [formControl]=\\\"email\\\" [errorStateMatcher]=\\\"matcher\\\">\\n        <mat-error *ngIf=\\\"email.hasError('email') && !email.hasError('required')\\\">\\n          Proszę wpisać poprawny adres email.\\n        </mat-error>\\n        <mat-error *ngIf=\\\"email.hasError('required')\\\">\\n          Email jest wymagany.\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Hasło\\\" [type]=\\\"'password'\\\" [formControl]=\\\"password\\\" [errorStateMatcher]=\\\"matcher\\\">\\n        <mat-error *ngIf=\\\"password.hasError('password') && !password.hasError('required')\\\">\\n          Wpisz poprawne hasło\\n        </mat-error>\\n        <mat-error *ngIf=\\\"password.hasError('required')\\\">\\n          Hasło jest wymagane\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Powtórz hasło\\\" [type]=\\\"'password'\\\" [formControl]=\\\"repeatPassword\\\"\\n          [errorStateMatcher]=\\\"matcher\\\">\\n        <mat-error *ngIf=\\\"repeatPassword.hasError('password') && !repeatPassword.hasError('required')\\\">\\n          Wpisz poprawne hasło\\n        </mat-error>\\n        <mat-error *ngIf=\\\"password.hasError('required')\\\">\\n          Powtórzenie hasła jest wymagane\\n        </mat-error>\\n      </mat-form-field>\\n\\n\\n      <mat-card-header>\\n        <mat-card-title>Dane firmy</mat-card-title>\\n      </mat-card-header>\\n      <hr>\\n\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Imię właściciela\\\" [formControl]=\\\"name\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Nazwisko właściciela\\\" [formControl]=\\\"surname\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Nazwa firmy\\\" [formControl]=\\\"company\\\" [errorStateMatcher]=\\\"matcher\\\">\\n        <mat-error *ngIf=\\\"company.hasError('required')\\\">\\n          Proszę wpisać nazwę firmy.\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Numer nip firmy\\\" [formControl]=\\\"nip\\\" [errorStateMatcher]=\\\"matcher\\\">\\n        <mat-error *ngIf=\\\"nip.hasError('required')\\\">\\n          Proszę wpisać numer nip.\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Ulica\\\" [formControl]=\\\"street\\\" [errorStateMatcher]=\\\"matcher\\\">\\n        <mat-error *ngIf=\\\"street.hasError('required')\\\">\\n          Proszę wpisać ulicę.\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <div class=\\\"max-width\\\">\\n        <mat-form-field class=\\\"parcel-field\\\">\\n          <input matInput placeholder=\\\"Numer domu\\\" [formControl]=\\\"parcelNo\\\" [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-error *ngIf=\\\"parcelNo.hasError('required')\\\">\\n            Proszę wpisać numer domu.\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <label>/</label>\\n\\n        <mat-form-field class=\\\"home-field\\\">\\n          <input matInput placeholder=\\\"Numer mieszkania\\\" [formControl]=\\\"homeNo\\\" [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-error *ngIf=\\\"homeNo.hasError('required')\\\">\\n            Proszę wpisać numer mieszkania.\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"max-width\\\">\\n        <mat-form-field class=\\\"zip-field\\\">\\n          <input matInput placeholder=\\\"Kod pocztowy\\\" [formControl]=\\\"zip\\\" [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-error *ngIf=\\\"zip.hasError('required')\\\">\\n            Proszę wpisać kod pocztowy.\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <label>,</label>\\n\\n        <mat-form-field class=\\\"city-field\\\">\\n          <input matInput placeholder=\\\"Miasto\\\" [formControl]=\\\"city\\\" [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-error *ngIf=\\\"city.hasError('required')\\\">\\n            Proszę wpisać miasto.\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n\\n      <mat-card-header>\\n        <mat-card-title>Forma opodatkowania</mat-card-title>\\n      </mat-card-header>\\n      <hr>\\n\\n      <mat-form-field class=\\\"form-field\\\">\\n        <mat-select placeholder=\\\"Wybierz formę opodatkowania\\\" [formControl]=\\\"taxForm\\\" [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-option value=\\\"GENERAL_RULES_TAX_SCALE\\\">Zasady ogólne - skala podatkowa</mat-option>\\n          <mat-option value=\\\"GENERAL_RULES_FLAT_TAX\\\">Zasady ogólne - podatek liniowy</mat-option>\\n          <mat-option value=\\\"LUMP_SUM_REGISTRED_INCOME\\\" disabled>Ryczałt od dochodów ewidencjonowanych</mat-option>\\n          <mat-option value=\\\"TAX_CARD\\\" disabled>Karta podatkowa</mat-option>\\n        </mat-select>\\n        <mat-error *ngIf=\\\"taxForm.hasError('required')\\\">Musisz wybrać formę opodatkowania</mat-error>\\n      </mat-form-field>\\n    </mat-card-content>\\n\\n  </form>\\n  <mat-card-actions class=\\\"buttons-panel\\\">\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" (click)=\\\"register()\\\">Zarejestruj</button>\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" (click)=\\\"back()\\\">Anuluj</button>\\n  </mat-card-actions>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ErrorFieldsMatcherService } from 'src/app/services/error-fields-matcher.service';\nimport { UserRegister, DialogData } from 'src/app/models/models';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { MatSnackBar, MatDialog, MatDialogRef } from '@angular/material';\nimport { InformationDialogComponent } from '../dialog/information-dialog/information-dialog.component';\nimport { invalid } from 'moment';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css', '../../app.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n  user: UserRegister;\n  email: FormControl;\n  name: FormControl;\n  surname: FormControl;\n  company: FormControl;\n  nip: FormControl;\n  street: FormControl;\n  parcelNo: FormControl;\n  zip: FormControl;\n  city: FormControl;\n  password: FormControl;\n  homeNo: FormControl;\n  repeatPassword: FormControl;\n  taxForm: FormControl;\n\n  constructor(\n    private router: Router,\n    public matcher: ErrorFieldsMatcherService,\n    private userService: UserService,\n    private dialog: MatDialog,\n  ) { }\n\n  register() {\n    let isPassWalid = this.isPasswordsThisSame();\n    if (isPassWalid && this.isValid()) {\n      this.user = <UserRegister>{\n        email: this.email.value,\n        firstName: this.name.value,\n        surname: this.surname.value,\n        company: this.company.value,\n        nip: this.nip.value,\n        street: this.street.value,\n        parcelNo: this.parcelNo.value,\n        homeNo: this.homeNo.value,\n        zip: this.zip.value,\n        city: this.city.value,\n        country: \"Poland\",\n        password: this.password.value,\n        taxForm: this.taxForm.value\n      }\n      this.userService.registration(this.user).subscribe(data => {\n        if (data) {\n          this.isRegistred();\n        } else this.isNoRegistred();\n      });\n    } else this.invalids();\n  }\n\n  invalids() {\n    let dialogData: DialogData = {\n      title: \"Niepoprawne dane\",\n      context: \"Nie możemy kontynuowć ze względu na niepoprawne dane. Proszę poprawić wprowadzone dane.\",\n    };\n    let dialogRef = this.dialog.open(InformationDialogComponent, { data: dialogData });\n    dialogRef.afterClosed();\n  }\n\n  private isNoRegistred() {\n    let dialogData: DialogData = {\n      title: \"Nie zarejestrowany\",\n      context: \"Niezmiernie nam przykro, ale nie zostałeś zarejestrowany, prosimy spróbować ponownie.\",\n    };\n    let dialogRef = this.dialog.open(InformationDialogComponent, { data: dialogData });\n    dialogRef.afterClosed();\n  }\n\n  private isRegistred() {\n    let dialogData: DialogData = {\n      title: \"Gratulacje\",\n      context: \"Zostałeś pomyślnie zarejestrowany, w celu dokończenia, proszę kliknąć w link aktywacujny wysłany na wcześniej podany email.\",\n    };\n    let dialogRef = this.dialog.open(InformationDialogComponent, { data: dialogData });\n    dialogRef.afterClosed().subscribe(subscribe => this.back());\n  }\n\n  isPasswordsThisSame(){\n    if (this.password.value !== this.repeatPassword.value) {\n      this.password.setValue(null);\n      this.repeatPassword.setValue(null);\n      let dialogData: DialogData = {\n        title: \"Hasła nie pasują\",\n        context: \"Hasło i powtórzone hasło nie pasują do siebie. Proszę wpisać poprawane dane.\",\n      };\n      let dialogRef = this.dialog.open(InformationDialogComponent, { data: dialogData });\n      dialogRef.close();\n      return false;\n    }\n    return true;\n  }\n\n  isValid() {\n    return this.email.valid && this.name.valid && this.surname.valid && this.company.valid && this.nip.valid &&\n      this.street.valid && this.parcelNo.valid && this.homeNo.valid && this.zip.valid && this.city.valid &&\n      this.password.valid && this.taxForm.valid;\n  }\n\n  ngOnInit() {\n    this.email = new FormControl('', [\n      Validators.required,\n      Validators.email,\n      Validators.pattern(\"[a-zA-Z0-9.-]+\\@[a-zA-Z0-9.-]+\\.[a-z]+\")\n    ]);\n\n    this.name = new FormControl('', [\n      Validators.required,\n      Validators.maxLength(15)\n    ]);\n\n    this.surname = new FormControl('', [\n      Validators.required,\n      Validators.maxLength(15)\n    ]);\n\n    this.company = new FormControl('', [\n      Validators.required,\n      Validators.maxLength(50)\n    ]);\n\n    this.nip = new FormControl('', [\n      Validators.required,\n      Validators.minLength(10),\n      Validators.maxLength(10),\n    ]);\n\n    this.street = new FormControl('', [\n      Validators.required,\n      Validators.maxLength(20)\n    ]);\n\n    this.parcelNo = new FormControl('', [\n      Validators.required,\n      Validators.maxLength(5)\n    ]);\n\n    this.homeNo = new FormControl('', [\n      Validators.maxLength(5)\n    ]);\n\n    this.zip = new FormControl('', [\n      Validators.required,\n      Validators.maxLength(6),\n      Validators.minLength(6),\n      Validators.pattern(\"[0-9]{2}-[0-9]{3}\")\n    ]);\n\n    this.city = new FormControl('', [\n      Validators.required,\n      Validators.maxLength(15)\n    ]);\n\n    this.password = new FormControl('', [\n      Validators.required,\n      Validators.nullValidator,\n      Validators.minLength(5),\n      Validators.maxLength(12),\n      Validators.pattern(\"[a-zA-Z0-9!@$%^&-+=?]+\")\n    ]);\n\n    this.repeatPassword = new FormControl('', [\n      Validators.required,\n      Validators.nullValidator,\n      Validators.minLength(5),\n      Validators.maxLength(12),\n      Validators.pattern(\"[a-zA-Z0-9!@$%^&-+=?]+\")\n    ]);\n\n    this.taxForm = new FormControl('', [\n      Validators.required,\n    ]);\n  }\n\n  back() {\n    this.router.navigateByUrl('/');\n  }\n}","module.exports = \".parcel-field {\\n  width: 45%;\\n  padding-right: 4%\\n}\\n\\n.home-field {\\n  width: 45%;\\n  float: right;\\n}\\n\\n.zip-field {\\n  width: 30%;\\n}\\n\\n.city-field {\\n  width: 65%;\\n  float: right;\\n}\\n\\n.my-mat-card-title {\\n  width: 100%;\\n  text-align: center;\\n}\\n\\n.new-account-button {\\n  float: right;\\n  margin-right: 0%;\\n  margin-bottom: 10px;\\n}\\n\\n.submit-button {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9jb21wb25lbnRzL3NldHRpbmdzL3NldHRpbmdzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0VBQ1gsaUJBQWlCO0NBQ2xCOztBQUVEO0VBQ0UsV0FBVztFQUNYLGFBQWE7Q0FDZDs7QUFFRDtFQUNFLFdBQVc7Q0FDWjs7QUFFRDtFQUNFLFdBQVc7RUFDWCxhQUFhO0NBQ2Q7O0FBRUQ7RUFDRSxZQUFZO0VBQ1osbUJBQW1CO0NBQ3BCOztBQUVEO0VBQ0UsYUFBYTtFQUNiLGlCQUFpQjtFQUNqQixvQkFBb0I7Q0FDckI7O0FBRUQ7RUFDRSxjQUFjO0VBQ2Qsb0JBQW9CO0VBQ3BCLHdCQUF3QjtDQUN6QiIsImZpbGUiOiJhcHAvY29tcG9uZW50cy9zZXR0aW5ncy9zZXR0aW5ncy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBhcmNlbC1maWVsZCB7XG4gIHdpZHRoOiA0NSU7XG4gIHBhZGRpbmctcmlnaHQ6IDQlXG59XG5cbi5ob21lLWZpZWxkIHtcbiAgd2lkdGg6IDQ1JTtcbiAgZmxvYXQ6IHJpZ2h0O1xufVxuXG4uemlwLWZpZWxkIHtcbiAgd2lkdGg6IDMwJTtcbn1cblxuLmNpdHktZmllbGQge1xuICB3aWR0aDogNjUlO1xuICBmbG9hdDogcmlnaHQ7XG59XG5cbi5teS1tYXQtY2FyZC10aXRsZSB7XG4gIHdpZHRoOiAxMDAlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5uZXctYWNjb3VudC1idXR0b24ge1xuICBmbG9hdDogcmlnaHQ7XG4gIG1hcmdpbi1yaWdodDogMCU7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG5cbi5zdWJtaXQtYnV0dG9uIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59Il19 */\"","module.exports = \"<h1 class=\\\"title\\\">Ustawienia\\n  <hr>\\n</h1>\\n\\n<mat-card class=\\\"container\\\">\\n\\n  <mat-card-header>\\n    <mat-card-title>Dane do logowania</mat-card-title>\\n  </mat-card-header>\\n  <hr>\\n  <mat-card-content>\\n    <form>\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Email\\\" [formControl]=\\\"email\\\" [errorStateMatcher]=\\\"matcher\\\">\\n        <mat-error *ngIf=\\\"email.hasError('email') && !email.hasError('required')\\\">\\n          Proszę wpisać poprawny adres email.\\n        </mat-error>\\n        <mat-error *ngIf=\\\"email.hasError('required')\\\">\\n          Email jest wymagany.\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Hasło\\\" [type]=\\\"'password'\\\" [formControl]=\\\"password\\\" [errorStateMatcher]=\\\"matcher\\\">\\n        <mat-error *ngIf=\\\"password.hasError('password') && !password.hasError('required')\\\">\\n          Wpisz poprawne hasło\\n        </mat-error>\\n        <mat-error *ngIf=\\\"password.hasError('required')\\\">\\n          Hasło jest wymagane\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Powtórz hasło\\\" [type]=\\\"'password'\\\" [formControl]=\\\"repeatPassword\\\"\\n          [errorStateMatcher]=\\\"matcher\\\">\\n        <mat-error *ngIf=\\\"repeatPassword.hasError('password') && !repeatPassword.hasError('required')\\\">\\n          Wpisz poprawne hasło\\n        </mat-error>\\n        <mat-error *ngIf=\\\"password.hasError('required')\\\">\\n          Powtórzenie hasła jest wymagane\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-card-header>\\n        <mat-card-title>Forma opodatkowania</mat-card-title>\\n      </mat-card-header>\\n      <hr>\\n\\n      <mat-form-field class=\\\"form-field\\\">\\n        <mat-select placeholder=\\\"Wybierz formę opodatkowania\\\" [formControl]=\\\"taxForm\\\" [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-option value=\\\"GENERAL_RULES_TAX_SCALE\\\">Zasady ogólne - skala podatkowa</mat-option>\\n          <mat-option value=\\\"GENERAL_RULES_FLAT_TAX\\\">Zasady ogólne - podatek liniowy</mat-option>\\n          <mat-option value=\\\"LUMP_SUM_REGISTRED_INCOME\\\" disabled>Ryczałt od dochodów ewidencjonowanych</mat-option>\\n          <mat-option value=\\\"TAX_CARD\\\" disabled>Karta podatkowa</mat-option>\\n        </mat-select>\\n        <mat-error *ngIf=\\\"taxForm.hasError('required')\\\">Musisz wybrać formę opodatkowania</mat-error>\\n      </mat-form-field>\\n\\n      <mat-card-header>\\n        <mat-card-title class=\\\"\\\">Dane firmy</mat-card-title>\\n      </mat-card-header>\\n      <hr>\\n\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Imię właściciela\\\" [formControl]=\\\"firstName\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Nazwisko właściciela\\\" [formControl]=\\\"surname\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Nazwa firmy\\\" [formControl]=\\\"company\\\" [errorStateMatcher]=\\\"matcher\\\">\\n        <mat-error *ngIf=\\\"company.hasError('required')\\\">\\n          Proszę wpisać nazwę firmy.\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Numer nip firmy\\\" [formControl]=\\\"nip\\\" [errorStateMatcher]=\\\"matcher\\\">\\n        <mat-error *ngIf=\\\"nip.hasError('required')\\\">\\n          Proszę wpisać numer nip.\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Numer regon firmy\\\" [formControl]=\\\"regon\\\" [errorStateMatcher]=\\\"matcher\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Numer pkd firmy\\\" [formControl]=\\\"pkd\\\" [errorStateMatcher]=\\\"matcher\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"form-field\\\">\\n        <input matInput placeholder=\\\"Ulica\\\" [formControl]=\\\"street\\\" [errorStateMatcher]=\\\"matcher\\\">\\n        <mat-error *ngIf=\\\"street.hasError('required')\\\">\\n          Proszę wpisać ulicę.\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <div class=\\\"max-width\\\">\\n        <mat-form-field class=\\\"parcel-field\\\">\\n          <input matInput placeholder=\\\"Numer domu\\\" [formControl]=\\\"parcelNo\\\" [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-error *ngIf=\\\"parcelNo.hasError('required')\\\">\\n            Proszę wpisać numer domu.\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <label>/</label>\\n\\n        <mat-form-field class=\\\"home-field\\\">\\n          <input matInput placeholder=\\\"Numer mieszkania\\\" [formControl]=\\\"homeNo\\\" [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-error *ngIf=\\\"homeNo.hasError('required')\\\">\\n            Proszę wpisać numer mieszkania.\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"max-width\\\">\\n        <mat-form-field class=\\\"zip-field\\\">\\n          <input matInput placeholder=\\\"Kod pocztowy\\\" [formControl]=\\\"zip\\\" [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-error *ngIf=\\\"zip.hasError('required') || zip.hasError('minLength') || zip.hasError('maxLength')\\\">\\n            Proszę wpisać kod pocztowy w formie XX-XXX\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <label>,</label>\\n\\n        <mat-form-field class=\\\"city-field\\\">\\n          <input matInput placeholder=\\\"Miasto\\\" [formControl]=\\\"city\\\" [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-error *ngIf=\\\"city.hasError('required')\\\">\\n            Proszę wpisać miasto.\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"form-field\\\">\\n          <input matInput placeholder=\\\"Kraj\\\" [formControl]=\\\"country\\\" [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-error *ngIf=\\\"country.hasError('required')\\\">\\n            Proszę wpisać państwo.\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n\\n    </form>\\n\\n    <mat-card-header>\\n      <mat-card-title>Konta bankowe</mat-card-title>\\n    </mat-card-header>\\n    <hr>\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"button new-account-button\\\" (click)=\\\"newAccount()\\\">Nowe konto</button>\\n    <div >\\n      <table mat-table [dataSource]=\\\"bankAccountDataSource\\\" class=\\\"max-width mat-elevation-z8\\\">\\n        <ng-container matColumnDef=\\\"accountNo\\\">\\n          <th mat-header-cell *matHeaderCellDef > Numer konta </th>\\n          <td mat-cell *matCellDef=\\\"let bankAccount\\\"> {{bankAccount.accountNo}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"currency\\\">\\n          <th mat-header-cell *matHeaderCellDef > Waluta </th>\\n          <td mat-cell *matCellDef=\\\"let bankAccount\\\"> {{bankAccount.currency}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"swift\\\">\\n          <th mat-header-cell *matHeaderCellDef> Numer SWIFT </th>\\n          <td mat-cell *matCellDef=\\\"let bankAccount\\\"> {{bankAccount.swift}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"actions\\\">\\n          <th mat-header-cell *matHeaderCellDef> Akcje </th>\\n          <td mat-cell *matCellDef=\\\"let bankAccount\\\"> \\n              <mat-icon mat-flat-button color=\\\"primary\\\" matTooltip=\\\"Edytuj konto bankomatowe\\\"\\n              (click)=\\\"edit(bankAccount)\\\">edit</mat-icon>\\n              <mat-icon mat-flat-button color=\\\"warn\\\" matTooltip=\\\"Usuń konto bankomatowe\\\"\\n              (click)=\\\"delete(bankAccount)\\\">delete</mat-icon>\\n            </td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns;\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n      </table>\\n    </div>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <div mat-dialog-actions class=\\\"submit-button\\\"  >\\n      <button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" (click)=\\\"save()\\\">Zapisz</button>\\n    </div>\\n  </mat-card-actions>\\n</mat-card>\"","import { Component, ViewChild } from '@angular/core';\nimport { FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { BankAccount, User, DialogData, YesNoDialogData } from 'src/app/models/models';\nimport { UserService } from 'src/app/services/user.service';\nimport { ErrorFieldsMatcherService } from 'src/app/services/error-fields-matcher.service';\nimport { TaxForm } from 'src/app/models/enums';\nimport { first } from 'rxjs/operators';\nimport { InformationDialogComponent } from '../dialog/information-dialog/information-dialog.component';\nimport { MatDialog, MatSnackBar, MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\nimport { AccountDialogComponent } from '../dialog/account-dialog/account-dialog.component';\nimport { isNullOrUndefined } from 'util';\nimport { BankAccountDataSource } from 'src/app/datasource/bank-account-datasource';\nimport { YesNoDialog } from '../dialog/yes-no-dialog/yes-no-dialog.component';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css', '../../app.component.css']\n})\nexport class SettingsComponent {\n  user: User;\n  id: number;\n  email: FormControl;\n  firstName: FormControl;\n  surname: FormControl;\n  company: FormControl;\n  nip: FormControl;\n  street: FormControl;\n  parcelNo: FormControl;\n  zip: FormControl;\n  city: FormControl;\n  country: FormControl;\n  pkd: FormControl;\n  regon: FormControl;\n  password: FormControl;\n  homeNo: FormControl;\n  repeatPassword: FormControl;\n  taxForm: FormControl;\n  displayedColumns: string[];\n  bankAccountDataSource: BankAccountDataSource;\n  bankAccounts: BankAccount[];\n\n  constructor(\n    public matcher: ErrorFieldsMatcherService,\n    private userService: UserService,\n    private dialog: MatDialog,\n    public snackBar: MatSnackBar,\n  ) {\n    this.displayedColumns = [\"accountNo\", \"currency\", \"swift\", \"actions\"];\n  }\n\n  save() {\n    this.user = <User>{\n      id: this.id,\n      email: this.email.value,\n      firstName: this.firstName.value,\n      company: this.company.value,\n      nip: this.nip.value,\n      surname: this.surname.value,\n      street: this.street.value,\n      parcelNo: this.parcelNo.value,\n      homeNo: this.homeNo.value,\n      zip: this.zip.value,\n      city: this.city.value,\n      taxForm: this.taxForm.value,\n      pkd: this.pkd.value,\n      regon: this.regon.value,\n      country: this.country.value,\n      bankAccountSet: this.bankAccounts,\n    }\n    this.isPasswordsThisSame();\n    if (this.isValid()) {\n      this.userService.update(this.user).pipe(first()).subscribe(data => {\n        if (!data) {\n          let dialogData: DialogData = {\n            title: \"Nie zarejestrowany\",\n            context: \"Niezmiernie nam przykro, ale nie zostałeś zarejestrowany, prosimy spróbować ponownie.\",\n          };\n          let dialogRef = this.dialog.open(InformationDialogComponent, { data: dialogData });\n          dialogRef.afterClosed();\n        } else {\n          this.showSnackBar('Zapisano zmiany');\n          this.getUser();\n        }\n      });\n    }\n    else this.showSnackBar(\"Przykro nam, ale nie zapisano zmian.\");\n  }\n\n  newAccount() {\n    let newAccount = <BankAccount>{\n      accountNo: '', currency: '', swift: '',\n    }\n    let dialogRef = this.dialog.open(AccountDialogComponent, { width: \"400px\", data: newAccount });\n    dialogRef.afterClosed().subscribe(result => {\n      let res: BankAccount = result;\n      if (isNullOrUndefined(res.id)) {\n        this.bankAccounts.push(res);\n        this.bankAccountDataSource = new BankAccountDataSource(this.bankAccounts);\n      } else this.edit(res);\n    });\n  }\n\n  edit(account: BankAccount) {\n    let dialogRef = this.dialog.open(AccountDialogComponent, { width: \"400px\", data: account });\n    dialogRef.afterClosed().subscribe(result => {\n      let res: BankAccount = result;\n      let index = this.getBankAccountIndexByAccountNo(res.accountNo);\n      this.bankAccounts[index] = res;\n      this.bankAccountDataSource = new BankAccountDataSource(this.bankAccounts);\n    });\n  }\n\n  showSnackBar(text: string) { this.snackBar.open(text, '', { duration: 3000 }); }\n\n  getBankAccountByAccountNo(accountNo: string) {\n    return this.bankAccounts.find(x => x.accountNo === accountNo);\n  }\n\n  getBankAccountIndexByAccountNo(accountNo: string) {\n    return this.bankAccounts.indexOf(this.getBankAccountByAccountNo(accountNo));\n  }\n\n  updateArray(newitem) {\n    this.bankAccounts[newitem.id] = newitem\n  }\n\n  delete(account: BankAccount) {\n    let dialogData: YesNoDialogData = {\n      title: \"Usuwanie konta\",\n      context: \"Czy usunąć konto: \" + account.currency + \" \" + account.accountNo,\n      yesButton: \"Usuń\", noButton: \"Anuluj\"\n    };\n    let dialogRef = this.dialog.open(YesNoDialog, { data: dialogData });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        let index = this.getBankAccountIndexByAccountNo(account.accountNo);\n        if (index !== -1) {\n          this.bankAccounts.splice(index, 1);\n          this.bankAccountDataSource = new BankAccountDataSource(this.bankAccounts);\n          if (!isNullOrUndefined(account.id)) {\n            this.userService.deleteAccount(account.id).pipe(first()).subscribe(\n              result => {\n                if (result) { this.showSnackBar(\"Udało się usunąć konto\"); }\n                else this.showSnackBar(\"Przykro nam, ale nie udało się usunąć konto\");\n              }\n            )\n          }\n        }\n      }\n    })\n  }\n\n  isValid() {\n    return this.email.valid && this.company.valid && this.street.valid && this.parcelNo.valid && this.homeNo.valid\n      && this.zip.valid && this.city.valid && this.taxForm.valid && this.country.valid\n  }\n\n  isPasswordsThisSame() {\n    if (this.password.value != null && this.repeatPassword.value != null) {\n      if (this.password.valid && this.repeatPassword.valid && this.password.value === this.repeatPassword.value) {\n        this.user.password = this.password.value;\n      } else {\n        this.password.setValue(null);\n        this.repeatPassword.setValue(null);\n        let dialogData: DialogData = {\n          title: \"Hasła nie pasują\",\n          context: \"Hasło i powtórzone hasło nie pasują do siebie. Proszę wpisać poprawane dane.\",\n        };\n        let dialogRef = this.dialog.open(InformationDialogComponent, { data: dialogData });\n        dialogRef.close();\n      }\n    }\n\n  }\n\n  ngOnInit() {\n    this.initializeForms();\n    this.getUser();\n  }\n\n  getUser() {\n    this.userService.get().pipe(first()).subscribe(user => {\n      this.user = user\n      this.id = user.id;\n      this.email.setValue(this.user.email);\n      this.firstName.setValue(this.user.firstName);\n      this.company.setValue(this.user.company);\n      this.nip.setValue(this.user.nip);\n      this.surname.setValue(this.user.surname);\n      this.street.setValue(this.user.street);\n      this.parcelNo.setValue(this.user.parcelNo);\n      this.homeNo.setValue(this.user.homeNo);\n      this.zip.setValue(this.user.zip);\n      this.city.setValue(this.user.city);\n      this.taxForm.setValue(this.user.taxForm);\n      this.pkd.setValue(this.user.pkd);\n      this.regon.setValue(this.user.regon);\n      this.country.setValue(this.user.country);\n      this.bankAccounts = this.user.bankAccountSet;\n      this.bankAccountDataSource = new BankAccountDataSource(this.bankAccounts);\n    });\n  }\n\n  initializeForms() {\n    this.email = new FormControl(null, [\n      Validators.required,\n      Validators.email,\n      Validators.pattern(\"[a-zA-Z0-9.-]+\\@[a-zA-Z0-9.-]+\\.[a-z]+\")\n    ]);\n\n    this.firstName = new FormControl(null, [\n      Validators.required,\n      Validators.maxLength(15)\n    ]);\n\n    this.surname = new FormControl(null, [\n      Validators.maxLength(15)\n    ]);\n\n    this.company = new FormControl(null, [\n      Validators.required,\n      Validators.maxLength(50)\n    ]);\n\n    this.nip = new FormControl({ value: null, disabled: true }, [\n      Validators.required,\n    ]);\n\n    this.street = new FormControl(null, [\n      Validators.required,\n      Validators.maxLength(20)\n    ]);\n\n    this.parcelNo = new FormControl(null, [\n      Validators.required,\n      Validators.maxLength(5)\n    ]);\n\n    this.homeNo = new FormControl(null, [\n      Validators.required,\n      Validators.maxLength(5)\n    ]);\n\n    this.zip = new FormControl(null, [\n      Validators.required,\n      Validators.maxLength(6),\n      Validators.minLength(6),\n      Validators.pattern(\"[0-9]{2}-[0-9]{3}\")\n    ]);\n\n    this.city = new FormControl(null, [\n      Validators.required,\n      Validators.maxLength(15)\n    ]);\n\n    this.taxForm = new FormControl(null, [\n      Validators.required,\n    ]);\n\n    this.pkd = new FormControl(null, [\n      Validators.maxLength(10)\n    ]);\n\n    this.country = new FormControl(null, [\n      Validators.required\n    ]);\n\n    this.regon = new FormControl(null, [\n      Validators.minLength(9),\n      Validators.maxLength(14)\n    ]);\n\n    this.password = new FormControl(null, [\n      Validators.minLength(5),\n      Validators.maxLength(12),\n      Validators.pattern(\"[a-zA-Z0-9!@$%^&-+=?]+\")\n    ]);\n\n    this.repeatPassword = new FormControl(null, [\n      Validators.minLength(5),\n      Validators.maxLength(12),\n      Validators.pattern(\"[a-zA-Z0-9!@$%^&-+=?]+\")\n    ]);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SnackBarService {\n  constructor(private snackBar: MatSnackBar) { }\n\n  show(text: string) {\n    this.snackBar.open(text, '', { duration: 3000 });\n  }\n}\n","import { BankAccount } from \"../models/models\";\nimport { DataSource } from \"@angular/cdk/table\";\nimport { MatPaginator, MatSort } from \"@angular/material\";\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\nimport { UserService } from \"../services/user.service\";\n\n/**\n * Data source for the BankAccount view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class BankAccountDataSource extends DataSource<BankAccount> {\n  \n    constructor(private data: BankAccount[]) {\n      super();\n    }\n  \n    /**\n     * Connect this data source to the table. The table will only update when\n     * the returned stream emits new items.\n     * @returns A stream of the items to be rendered.\n     */\n    connect(): Observable<BankAccount[]> {\n      // Combine everything that affects the rendered data into one update\n      // stream for the data-table to consume.\n      const dataMutations = [\n        observableOf(this.data),\n      ];\n  \n      return merge(...dataMutations).pipe(map(() => {\n        return [...this.data];\n      }));\n    }\n  \n    /**\n     *  Called when the table is being destroyed. Use this function, to clean up\n     * any open connections or free any held resources that were set up during connect.\n     */\n    disconnect() {}\n}","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\nimport { ContractorMini } from '../models/models';\n\n/**\n * Data source for the ContractorList view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class ContractorListDataSource extends DataSource<ContractorMini> {\n  constructor(\n    private paginator: MatPaginator, \n    private sort: MatSort,\n    private data: ContractorMini[]) {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<ContractorMini[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    // Set the paginator's length\n    this.paginator.length = this.data.length;\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: ContractorMini[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: ContractorMini[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'personName': return compare(a.personName, b.personName, isAsc);\n        case 'trade': return compare(a.trade, b.trade, isAsc);\n        case 'company': return compare(a.company, b.company, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\nimport { Kpir } from 'src/app/models/models';\nimport { TouchSequence } from 'selenium-webdriver';\n\n/**\n * Data source for the Kpir view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class KpirListDataSource extends DataSource<Kpir> {\n  constructor(private paginator: MatPaginator, private sort: MatSort, private data: Kpir[]) {\n    super();\n  }\n\n  getData(){\n    return [...this.data];\n  }\n\n  getPageData(){\n    return this.getPagedData(this.getSortedData([...this.data]));\n  }\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<Kpir[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    // Set the paginator's length\n    this.paginator.length = this.data.length;\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: Kpir[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: Kpir[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        \n        case 'fullName': return compare(a.fullName, b.fullName, isAsc);\n        case 'registrationNumber': return compare(a.registrationNumber, b.registrationNumber, isAsc);\n        case 'economicEventDate': return compare(a.economicEventDate, b.economicEventDate, isAsc);\n        case 'idx': return compare(+a.idx, +b.idx, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class BasicAuthInterceptor implements HttpInterceptor {\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        let currentUser = JSON.parse(sessionStorage.getItem('currentUser'));\n        if (currentUser) {\n            request = request.clone({\n                setHeaders: {\n                    Authorization: `Basic ${currentUser}`,\n                }\n            });\n        }\n\n        return next.handle(request);\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401) {\n                this.authenticationService.logout();\n                location.reload(true);\n            }\n\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class Global {\n    public static get headers(): Headers {\n        return new Headers({\n            'Accepted': 'application/json',\n            'Content-Type': 'application/json',\n            'Cache-Control': 'no-cache',\n        });\n    }\n    public static get url(): string { return \"http://localhost:8080\"; }\n    public static get allMonths() {\n        return [\n        { name: 'styczeń', no: 1 }, \n        { name: 'luty', no: 2 },\n        { name: 'marzec', no: 3 },\n        { name: 'kwiecień', no: 4 },\n        { name: 'maj', no: 5 },\n        { name: 'czerwiec', no: 6 },\n        { name: 'lipiec', no: 7 },\n        { name: 'sierpień', no: 8 },\n        { name: 'wrzesień', no: 9 },\n        { name: 'pańdziernik', no: 10 },\n        { name: 'listopad', no: 11 },\n        { name: 'grudzień', no: 12 },];\n    }\n}\n\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Global } from '../models/global';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService implements OnDestroy{\n  url: string;\n  constructor(private http: HttpClient, private router: Router) {\n    this.url = Global.url;\n  }\n  login(username: string, password: string) {\n    let value: string = window.btoa(username + ':' + password);\n\n    // let options = { options: { headers: headers } };\n    return this.http.post<Boolean>(this.url + `/user/login`, { email: username, password: password})\n      .pipe(map(user => {\n        if (user) {\n          let authdata = window.btoa(username + ':' + password);\n          sessionStorage.setItem('currentUser', JSON.stringify(authdata));\n        }\n        return user;\n      }));\n  }\n\n  logout() {\n    // sessionStorage.removeItem('currentUser');\n    sessionStorage.clear()\n    this.router.navigateByUrl(\"/login\");\n  }\n\n  isLogged() {\n    let logged = sessionStorage.getItem(\"currentUser\");\n    return logged;\n  }\n\n  ngOnDestroy(): void {\n    sessionStorage.clear()\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Global } from '../models/global';\nimport { HttpClient } from '@angular/common/http';\nimport { ContractorMini, Contractor, ContractorFilter, ContractorSelect } from '../models/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContractorService {\n  private url: string;\n  constructor(private http: HttpClient) {\n    this.url = Global.url;\n  }\n\n  getAll(filter: ContractorFilter) {\n    return this.http.post<ContractorMini[]>(this.url + `/contractor`, filter);\n  }\n\n  getOne(id: number) {\n    return this.http.get<Contractor>(this.url + `/contractor/` + id);\n  }\n\n  create(contractor: Contractor) {\n    return this.http.post<Boolean>(this.url + `/contractor/`, contractor);\n  }\n\n  update(contractor: Contractor) {\n    return this.http.put<Boolean>(this.url + `/contractor/`, contractor);\n  }\n\n  delete(id: number) {\n    return this.http.delete<Boolean>(this.url + `/contractor/` + id);\n  }\n\n  getAllSelect() {\n    return this.http.get<ContractorSelect[]>(this.url + `/contractor`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ErrorStateMatcher } from '@angular/material';\nimport { FormGroupDirective, NgForm, FormControl } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorFieldsMatcherService implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Global } from '../models/global';\nimport { Kpir, KpirFilter } from '../models/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class KpirService {\n  private url: string;\n  public kpirId: number;\n\n  constructor(private http: HttpClient) {\n    this.url = Global.url;\n  }\n\n  getAll(filter: KpirFilter) {\n    return this.http.post<Kpir[]>(this.url + `/kpir`, filter);\n  }\n\n  getOne(id: number) {\n    return this.http.get<Kpir>(this.url + `/kpir/` + id);\n  }\n\n  create(kpir: Kpir) {\n    return this.http.post<Boolean>(this.url + `/kpir/`, kpir);\n  }\n\n  update(kpir: Kpir) {\n    return this.http.put<Boolean>(this.url + `/kpir/`, kpir);\n  }\n\n  delete(id: number) {\n    return this.http.delete<Boolean>(this.url + `/kpir/` + id);\n  }\n\n  getNextIdx() {\n    return this.http.get<Number>(this.url + \"/kpir/idx\")\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Global } from '../models/global';\nimport { KpirFilter } from '../models/models';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrinterService {\n  private url: string;\n\n  constructor(private http: HttpClient) {\n    this.url = Global.url;\n  }\n\n  getKpirAllResponse(filter: KpirFilter) {\n    return this.http.post<Response>(this.url + \"/printer/kpirs\", filter);\n  }\n\n  getKpirAllBlob(filter: KpirFilter) {\n    console.log(filter)\n    const httpOptions = {\n      'responseType': 'blob' as 'json'\n    };\n    return this.http.post<any>(this.url + \"/printer/kpir\", filter, httpOptions);\n  }\n\n  sendKpirAllViaMail(filter: KpirFilter) {\n    return this.http.post<void>(this.url + \"/printer/mail/kpir\", filter);\n  }\n  \n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Global } from '../models/global';\nimport { User, UserRegister, ActivateModel } from '../models/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  url: string;\n  constructor(private http: HttpClient) {\n    this.url = Global.url;\n  }\n\n  get() {\n    return this.http.get<User>(this.url + `/user/`);\n  }\n\n  registration(user: UserRegister) {\n    return this.http.post<Boolean>(this.url + `/user/registration`, user);\n  }\n\n  update(user: User) {\n    return this.http.put<Boolean>(this.url + `/user/`, user);\n  }\n\n  authorize(activateModel: ActivateModel) {\n    return this.http.post<Boolean>(this.url + `/user/authorize`, activateModel);\n  }\n\n  deleteAccount(id: number) {\n    return this.http.delete<Boolean>(this.url + `/account/` + id);\n  }\n\n  getRegistrationDate() {\n    return this.http.get<string>(this.url + `/user/registration/date`);\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}